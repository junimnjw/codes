saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "Assert"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "data"
          type_list_attr: "T"
        }
        attr {
          name: "T"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "summarize"
          type: "int"
          default_value {
            i: 3
          }
        }
        is_stateful: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "AvgPool"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "BatchToSpaceND"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "block_shape"
          type_attr: "Tblock_shape"
        }
        input_arg {
          name: "crops"
          type_attr: "Tcrops"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tblock_shape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "Tcrops"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
              s: "EXPLICIT"
            }
          }
        }
        attr {
          name: "explicit_paddings"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "DepthwiseConv2dNative"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FusedBatchNorm"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "scale"
          type_attr: "T"
        }
        input_arg {
          name: "offset"
          type_attr: "T"
        }
        input_arg {
          name: "mean"
          type_attr: "T"
        }
        input_arg {
          name: "variance"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "batch_mean"
          type_attr: "T"
        }
        output_arg {
          name: "batch_variance"
          type_attr: "T"
        }
        output_arg {
          name: "reserve_space_1"
          type_attr: "T"
        }
        output_arg {
          name: "reserve_space_2"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
            }
          }
        }
        attr {
          name: "epsilon"
          type: "float"
          default_value {
            f: 9.999999747378752e-05
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "is_training"
          type: "bool"
          default_value {
            b: true
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "L2Loss"
        input_arg {
          name: "t"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "LogicalAnd"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        input_arg {
          name: "y"
          type: DT_BOOL
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        is_commutative: true
      }
      op {
        name: "LogicalOr"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        input_arg {
          name: "y"
          type: DT_BOOL
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        is_commutative: true
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Pad"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "paddings"
          type_attr: "Tpaddings"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tpaddings"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_QINT8
            }
          }
        }
      }
      op {
        name: "Relu6"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ResizeBilinear"
        input_arg {
          name: "images"
          type_attr: "T"
        }
        input_arg {
          name: "size"
          type: DT_INT32
        }
        output_arg {
          name: "resized_images"
          type: DT_FLOAT
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT8
              type: DT_UINT8
              type: DT_INT16
              type: DT_UINT16
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "align_corners"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "half_pixel_centers"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "SpaceToBatchND"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "block_shape"
          type_attr: "Tblock_shape"
        }
        input_arg {
          name: "paddings"
          type_attr: "Tpaddings"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tblock_shape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "Tpaddings"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "SplitV"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "size_splits"
          type_attr: "Tlen"
        }
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tlen"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Squeeze"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "squeeze_dims"
          type: "list(int)"
          default_value {
            list {
            }
          }
          has_minimum: true
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TruncatedNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Unpack"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num"
        }
        attr {
          name: "num"
          type: "int"
          has_minimum: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.14.0"
    tensorflow_git_version: "v1.14.0-rc1-22-gaf24dc91b5"
  }
  graph_def {
    node {
      name: "imgnum"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "height"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
    }
    node {
      name: "width"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
    }
    node {
      name: "images_input"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Mul"
      op: "Mul"
      input: "height"
      input: "width"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "scalar"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Mul_1"
      op: "Mul"
      input: "scalar"
      input: "Mul"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "x"
      op: "Identity"
      input: "images_input"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast"
      op: "Cast"
      input: "images_input"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "split"
      op: "SplitV"
      input: "x"
      input: "Mul_1"
      input: "split/split_dim"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tlen"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 8
        }
      }
    }
    node {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice/stack"
      input: "strided_slice/stack_1"
      input: "strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_1/stack"
      input: "strided_slice_1/stack_1"
      input: "strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Pack"
      input: "strided_slice"
      input: "strided_slice_1"
      input: "Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "split"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_1"
      op: "Cast"
      input: "Reshape"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape"
      op: "Shape"
      input: "Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice_2/stack"
      input: "strided_slice_2/stack_1"
      input: "strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_3"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice_3/stack"
      input: "strided_slice_3/stack_1"
      input: "strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub"
      op: "Sub"
      input: "sub/x"
      input: "strided_slice_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum"
      op: "Maximum"
      input: "sub"
      input: "Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add"
      op: "Add"
      input: "strided_slice_2"
      input: "Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_1"
      op: "Sub"
      input: "sub_1/x"
      input: "strided_slice_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_1"
      op: "Maximum"
      input: "sub_1"
      input: "Maximum_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_1"
      op: "Add"
      input: "strided_slice_3"
      input: "Maximum_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "Reshape_1/tensor"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Equal"
      op: "Equal"
      input: "pad_to_bounding_box/Rank"
      input: "pad_to_bounding_box/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box/Rank_1"
      input: "pad_to_bounding_box/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box/Equal"
      input: "pad_to_bounding_box/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box/LogicalOr"
      input: "pad_to_bounding_box/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub"
      op: "Sub"
      input: "Cast_1"
      input: "Reshape_1"
      input: "^pad_to_bounding_box/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box/sub"
      input: "pad_to_bounding_box/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Shape"
      op: "Shape"
      input: "pad_to_bounding_box/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual"
      op: "GreaterEqual"
      input: "add_1"
      input: "pad_to_bounding_box/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box/GreaterEqual"
      input: "pad_to_bounding_box/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add"
      input: "pad_to_bounding_box/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box/GreaterEqual_1"
      input: "pad_to_bounding_box/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_1"
      op: "Sub"
      input: "add_1"
      input: "pad_to_bounding_box/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box/sub_1"
      input: "pad_to_bounding_box/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_3"
      op: "Sub"
      input: "add"
      input: "pad_to_bounding_box/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box/sub_3"
      input: "pad_to_bounding_box/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box/sub_2"
      input: "pad_to_bounding_box/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box/sub_4"
      input: "pad_to_bounding_box/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box/GreaterEqual_2"
      input: "pad_to_bounding_box/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box/LogicalAnd"
      input: "pad_to_bounding_box/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box/stack_1/0"
      input: "pad_to_bounding_box/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box/stack_2/0"
      input: "pad_to_bounding_box/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box/stack"
      input: "pad_to_bounding_box/stack_1"
      input: "pad_to_bounding_box/stack_2"
      input: "pad_to_bounding_box/stack_3"
      input: "^pad_to_bounding_box/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Pad"
      op: "Pad"
      input: "pad_to_bounding_box/ExpandDims"
      input: "pad_to_bounding_box/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box/add"
      op: "Add"
      input: "pad_to_bounding_box/Squeeze"
      input: "Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_4"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_4/stack"
      input: "strided_slice_4/stack_1"
      input: "strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_5"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_5/stack"
      input: "strided_slice_5/stack_1"
      input: "strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_2/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Pack"
      input: "strided_slice_4"
      input: "strided_slice_5"
      input: "Reshape_2/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "split:1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_2"
      op: "Cast"
      input: "Reshape_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_1"
      op: "Shape"
      input: "Cast_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_6"
      op: "StridedSlice"
      input: "Shape_1"
      input: "strided_slice_6/stack"
      input: "strided_slice_6/stack_1"
      input: "strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_7"
      op: "StridedSlice"
      input: "Shape_1"
      input: "strided_slice_7/stack"
      input: "strided_slice_7/stack_1"
      input: "strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_2"
      op: "Sub"
      input: "sub_2/x"
      input: "strided_slice_6"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_2"
      op: "Maximum"
      input: "sub_2"
      input: "Maximum_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_2"
      op: "Add"
      input: "strided_slice_6"
      input: "Maximum_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_3"
      op: "Sub"
      input: "sub_3/x"
      input: "strided_slice_7"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_3"
      op: "Maximum"
      input: "sub_3"
      input: "Maximum_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_3"
      op: "Add"
      input: "strided_slice_7"
      input: "Maximum_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "Reshape_3/tensor"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_1/Rank"
      input: "pad_to_bounding_box_1/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_1/Rank_1"
      input: "pad_to_bounding_box_1/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_1/Equal"
      input: "pad_to_bounding_box_1/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_1/LogicalOr"
      input: "pad_to_bounding_box_1/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub"
      op: "Sub"
      input: "Cast_2"
      input: "Reshape_3"
      input: "^pad_to_bounding_box_1/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_1/sub"
      input: "pad_to_bounding_box_1/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_1/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_1/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual"
      op: "GreaterEqual"
      input: "add_3"
      input: "pad_to_bounding_box_1/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_1/GreaterEqual"
      input: "pad_to_bounding_box_1/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_2"
      input: "pad_to_bounding_box_1/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_1/GreaterEqual_1"
      input: "pad_to_bounding_box_1/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_1/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_1"
      op: "Sub"
      input: "add_3"
      input: "pad_to_bounding_box_1/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_1/sub_1"
      input: "pad_to_bounding_box_1/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_1/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_3"
      op: "Sub"
      input: "add_2"
      input: "pad_to_bounding_box_1/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_1/sub_3"
      input: "pad_to_bounding_box_1/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_1/sub_2"
      input: "pad_to_bounding_box_1/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_1/sub_4"
      input: "pad_to_bounding_box_1/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_1/GreaterEqual_2"
      input: "pad_to_bounding_box_1/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_1/LogicalAnd"
      input: "pad_to_bounding_box_1/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_1/stack_1/0"
      input: "pad_to_bounding_box_1/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_1/stack_2/0"
      input: "pad_to_bounding_box_1/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_1/stack"
      input: "pad_to_bounding_box_1/stack_1"
      input: "pad_to_bounding_box_1/stack_2"
      input: "pad_to_bounding_box_1/stack_3"
      input: "^pad_to_bounding_box_1/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_1/ExpandDims"
      input: "pad_to_bounding_box_1/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_1/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_1/add"
      op: "Add"
      input: "pad_to_bounding_box_1/Squeeze"
      input: "Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_8"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_8/stack"
      input: "strided_slice_8/stack_1"
      input: "strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_9"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_9/stack"
      input: "strided_slice_9/stack_1"
      input: "strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_4/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Pack"
      input: "strided_slice_8"
      input: "strided_slice_9"
      input: "Reshape_4/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "split:2"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_3"
      op: "Cast"
      input: "Reshape_4"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_2"
      op: "Shape"
      input: "Cast_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_10"
      op: "StridedSlice"
      input: "Shape_2"
      input: "strided_slice_10/stack"
      input: "strided_slice_10/stack_1"
      input: "strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_11"
      op: "StridedSlice"
      input: "Shape_2"
      input: "strided_slice_11/stack"
      input: "strided_slice_11/stack_1"
      input: "strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_4"
      op: "Sub"
      input: "sub_4/x"
      input: "strided_slice_10"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_4/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_4"
      op: "Maximum"
      input: "sub_4"
      input: "Maximum_4/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_4"
      op: "Add"
      input: "strided_slice_10"
      input: "Maximum_4"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_5"
      op: "Sub"
      input: "sub_5/x"
      input: "strided_slice_11"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_5/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_5"
      op: "Maximum"
      input: "sub_5"
      input: "Maximum_5/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_5"
      op: "Add"
      input: "strided_slice_11"
      input: "Maximum_5"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "Reshape_5/tensor"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_2/Rank"
      input: "pad_to_bounding_box_2/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_2/Rank_1"
      input: "pad_to_bounding_box_2/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_2/Equal"
      input: "pad_to_bounding_box_2/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_2/LogicalOr"
      input: "pad_to_bounding_box_2/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub"
      op: "Sub"
      input: "Cast_3"
      input: "Reshape_5"
      input: "^pad_to_bounding_box_2/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_2/sub"
      input: "pad_to_bounding_box_2/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_2/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_2/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual"
      op: "GreaterEqual"
      input: "add_5"
      input: "pad_to_bounding_box_2/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_2/GreaterEqual"
      input: "pad_to_bounding_box_2/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_4"
      input: "pad_to_bounding_box_2/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_2/GreaterEqual_1"
      input: "pad_to_bounding_box_2/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_2/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_1"
      op: "Sub"
      input: "add_5"
      input: "pad_to_bounding_box_2/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_2/sub_1"
      input: "pad_to_bounding_box_2/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_2/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_3"
      op: "Sub"
      input: "add_4"
      input: "pad_to_bounding_box_2/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_2/sub_3"
      input: "pad_to_bounding_box_2/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_2/sub_2"
      input: "pad_to_bounding_box_2/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_2/sub_4"
      input: "pad_to_bounding_box_2/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_2/GreaterEqual_2"
      input: "pad_to_bounding_box_2/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_2/LogicalAnd"
      input: "pad_to_bounding_box_2/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_2/stack_1/0"
      input: "pad_to_bounding_box_2/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_2/stack_2/0"
      input: "pad_to_bounding_box_2/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_2/stack"
      input: "pad_to_bounding_box_2/stack_1"
      input: "pad_to_bounding_box_2/stack_2"
      input: "pad_to_bounding_box_2/stack_3"
      input: "^pad_to_bounding_box_2/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_2/ExpandDims"
      input: "pad_to_bounding_box_2/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_2/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_2/add"
      op: "Add"
      input: "pad_to_bounding_box_2/Squeeze"
      input: "Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_12"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_12/stack"
      input: "strided_slice_12/stack_1"
      input: "strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_13"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_13/stack"
      input: "strided_slice_13/stack_1"
      input: "strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_6/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Pack"
      input: "strided_slice_12"
      input: "strided_slice_13"
      input: "Reshape_6/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "split:3"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_4"
      op: "Cast"
      input: "Reshape_6"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_3"
      op: "Shape"
      input: "Cast_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_14"
      op: "StridedSlice"
      input: "Shape_3"
      input: "strided_slice_14/stack"
      input: "strided_slice_14/stack_1"
      input: "strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_15/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_15/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_15/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_15"
      op: "StridedSlice"
      input: "Shape_3"
      input: "strided_slice_15/stack"
      input: "strided_slice_15/stack_1"
      input: "strided_slice_15/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_6"
      op: "Sub"
      input: "sub_6/x"
      input: "strided_slice_14"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_6/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_6"
      op: "Maximum"
      input: "sub_6"
      input: "Maximum_6/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_6"
      op: "Add"
      input: "strided_slice_14"
      input: "Maximum_6"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_7"
      op: "Sub"
      input: "sub_7/x"
      input: "strided_slice_15"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_7/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_7"
      op: "Maximum"
      input: "sub_7"
      input: "Maximum_7/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_7"
      op: "Add"
      input: "strided_slice_15"
      input: "Maximum_7"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "Reshape_7/tensor"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_3/Rank"
      input: "pad_to_bounding_box_3/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_3/Rank_1"
      input: "pad_to_bounding_box_3/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_3/Equal"
      input: "pad_to_bounding_box_3/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_3/LogicalOr"
      input: "pad_to_bounding_box_3/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub"
      op: "Sub"
      input: "Cast_4"
      input: "Reshape_7"
      input: "^pad_to_bounding_box_3/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_3/sub"
      input: "pad_to_bounding_box_3/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_3/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_3/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual"
      op: "GreaterEqual"
      input: "add_7"
      input: "pad_to_bounding_box_3/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_3/GreaterEqual"
      input: "pad_to_bounding_box_3/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_6"
      input: "pad_to_bounding_box_3/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_3/GreaterEqual_1"
      input: "pad_to_bounding_box_3/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_3/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_1"
      op: "Sub"
      input: "add_7"
      input: "pad_to_bounding_box_3/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_3/sub_1"
      input: "pad_to_bounding_box_3/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_3/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_3"
      op: "Sub"
      input: "add_6"
      input: "pad_to_bounding_box_3/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_3/sub_3"
      input: "pad_to_bounding_box_3/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_3/sub_2"
      input: "pad_to_bounding_box_3/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_3/sub_4"
      input: "pad_to_bounding_box_3/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_3/GreaterEqual_2"
      input: "pad_to_bounding_box_3/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_3/LogicalAnd"
      input: "pad_to_bounding_box_3/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_3/stack_1/0"
      input: "pad_to_bounding_box_3/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_3/stack_2/0"
      input: "pad_to_bounding_box_3/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_3/stack"
      input: "pad_to_bounding_box_3/stack_1"
      input: "pad_to_bounding_box_3/stack_2"
      input: "pad_to_bounding_box_3/stack_3"
      input: "^pad_to_bounding_box_3/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_3/ExpandDims"
      input: "pad_to_bounding_box_3/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_3/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_3/add"
      op: "Add"
      input: "pad_to_bounding_box_3/Squeeze"
      input: "Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_16/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "strided_slice_16/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 5
          }
        }
      }
    }
    node {
      name: "strided_slice_16/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_16"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_16/stack"
      input: "strided_slice_16/stack_1"
      input: "strided_slice_16/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_17/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "strided_slice_17/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 5
          }
        }
      }
    }
    node {
      name: "strided_slice_17/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_17"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_17/stack"
      input: "strided_slice_17/stack_1"
      input: "strided_slice_17/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_8/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Pack"
      input: "strided_slice_16"
      input: "strided_slice_17"
      input: "Reshape_8/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "split:4"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_5"
      op: "Cast"
      input: "Reshape_8"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_4"
      op: "Shape"
      input: "Cast_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_18/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_18/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_18/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_18"
      op: "StridedSlice"
      input: "Shape_4"
      input: "strided_slice_18/stack"
      input: "strided_slice_18/stack_1"
      input: "strided_slice_18/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_19/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_19/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_19/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_19"
      op: "StridedSlice"
      input: "Shape_4"
      input: "strided_slice_19/stack"
      input: "strided_slice_19/stack_1"
      input: "strided_slice_19/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_8/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_8"
      op: "Sub"
      input: "sub_8/x"
      input: "strided_slice_18"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_8/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_8"
      op: "Maximum"
      input: "sub_8"
      input: "Maximum_8/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_8"
      op: "Add"
      input: "strided_slice_18"
      input: "Maximum_8"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_9/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_9"
      op: "Sub"
      input: "sub_9/x"
      input: "strided_slice_19"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_9/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_9"
      op: "Maximum"
      input: "sub_9"
      input: "Maximum_9/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_9"
      op: "Add"
      input: "strided_slice_19"
      input: "Maximum_9"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "Reshape_9/tensor"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_4/Rank"
      input: "pad_to_bounding_box_4/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_4/Rank_1"
      input: "pad_to_bounding_box_4/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_4/Equal"
      input: "pad_to_bounding_box_4/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_4/LogicalOr"
      input: "pad_to_bounding_box_4/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub"
      op: "Sub"
      input: "Cast_5"
      input: "Reshape_9"
      input: "^pad_to_bounding_box_4/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_4/sub"
      input: "pad_to_bounding_box_4/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_4/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_4/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual"
      op: "GreaterEqual"
      input: "add_9"
      input: "pad_to_bounding_box_4/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_4/GreaterEqual"
      input: "pad_to_bounding_box_4/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_8"
      input: "pad_to_bounding_box_4/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_4/GreaterEqual_1"
      input: "pad_to_bounding_box_4/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_4/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_1"
      op: "Sub"
      input: "add_9"
      input: "pad_to_bounding_box_4/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_4/sub_1"
      input: "pad_to_bounding_box_4/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_4/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_3"
      op: "Sub"
      input: "add_8"
      input: "pad_to_bounding_box_4/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_4/sub_3"
      input: "pad_to_bounding_box_4/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_4/sub_2"
      input: "pad_to_bounding_box_4/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_4/sub_4"
      input: "pad_to_bounding_box_4/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_4/GreaterEqual_2"
      input: "pad_to_bounding_box_4/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_4/LogicalAnd"
      input: "pad_to_bounding_box_4/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_4/stack_1/0"
      input: "pad_to_bounding_box_4/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_4/stack_2/0"
      input: "pad_to_bounding_box_4/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_4/stack"
      input: "pad_to_bounding_box_4/stack_1"
      input: "pad_to_bounding_box_4/stack_2"
      input: "pad_to_bounding_box_4/stack_3"
      input: "^pad_to_bounding_box_4/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_4/ExpandDims"
      input: "pad_to_bounding_box_4/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_4/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_4/add"
      op: "Add"
      input: "pad_to_bounding_box_4/Squeeze"
      input: "Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_20/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 5
          }
        }
      }
    }
    node {
      name: "strided_slice_20/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6
          }
        }
      }
    }
    node {
      name: "strided_slice_20/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_20"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_20/stack"
      input: "strided_slice_20/stack_1"
      input: "strided_slice_20/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_21/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 5
          }
        }
      }
    }
    node {
      name: "strided_slice_21/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6
          }
        }
      }
    }
    node {
      name: "strided_slice_21/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_21"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_21/stack"
      input: "strided_slice_21/stack_1"
      input: "strided_slice_21/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_10/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Pack"
      input: "strided_slice_20"
      input: "strided_slice_21"
      input: "Reshape_10/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "split:5"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_6"
      op: "Cast"
      input: "Reshape_10"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_5"
      op: "Shape"
      input: "Cast_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_22/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_22/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_22/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_22"
      op: "StridedSlice"
      input: "Shape_5"
      input: "strided_slice_22/stack"
      input: "strided_slice_22/stack_1"
      input: "strided_slice_22/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_23/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_23/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_23/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_23"
      op: "StridedSlice"
      input: "Shape_5"
      input: "strided_slice_23/stack"
      input: "strided_slice_23/stack_1"
      input: "strided_slice_23/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_10/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_10"
      op: "Sub"
      input: "sub_10/x"
      input: "strided_slice_22"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_10/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_10"
      op: "Maximum"
      input: "sub_10"
      input: "Maximum_10/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_10"
      op: "Add"
      input: "strided_slice_22"
      input: "Maximum_10"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_11/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_11"
      op: "Sub"
      input: "sub_11/x"
      input: "strided_slice_23"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_11/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_11"
      op: "Maximum"
      input: "sub_11"
      input: "Maximum_11/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_11"
      op: "Add"
      input: "strided_slice_23"
      input: "Maximum_11"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "Reshape_11/tensor"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_5/Rank"
      input: "pad_to_bounding_box_5/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_5/Rank_1"
      input: "pad_to_bounding_box_5/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_5/Equal"
      input: "pad_to_bounding_box_5/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_5/LogicalOr"
      input: "pad_to_bounding_box_5/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub"
      op: "Sub"
      input: "Cast_6"
      input: "Reshape_11"
      input: "^pad_to_bounding_box_5/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_5/sub"
      input: "pad_to_bounding_box_5/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_5/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_5/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual"
      op: "GreaterEqual"
      input: "add_11"
      input: "pad_to_bounding_box_5/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_5/GreaterEqual"
      input: "pad_to_bounding_box_5/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_10"
      input: "pad_to_bounding_box_5/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_5/GreaterEqual_1"
      input: "pad_to_bounding_box_5/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_5/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_1"
      op: "Sub"
      input: "add_11"
      input: "pad_to_bounding_box_5/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_5/sub_1"
      input: "pad_to_bounding_box_5/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_5/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_3"
      op: "Sub"
      input: "add_10"
      input: "pad_to_bounding_box_5/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_5/sub_3"
      input: "pad_to_bounding_box_5/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_5/sub_2"
      input: "pad_to_bounding_box_5/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_5/sub_4"
      input: "pad_to_bounding_box_5/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_5/GreaterEqual_2"
      input: "pad_to_bounding_box_5/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_5/LogicalAnd"
      input: "pad_to_bounding_box_5/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_5/stack_1/0"
      input: "pad_to_bounding_box_5/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_5/stack_2/0"
      input: "pad_to_bounding_box_5/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_5/stack"
      input: "pad_to_bounding_box_5/stack_1"
      input: "pad_to_bounding_box_5/stack_2"
      input: "pad_to_bounding_box_5/stack_3"
      input: "^pad_to_bounding_box_5/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_5/ExpandDims"
      input: "pad_to_bounding_box_5/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_5/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_5/add"
      op: "Add"
      input: "pad_to_bounding_box_5/Squeeze"
      input: "Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_24/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6
          }
        }
      }
    }
    node {
      name: "strided_slice_24/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7
          }
        }
      }
    }
    node {
      name: "strided_slice_24/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_24"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_24/stack"
      input: "strided_slice_24/stack_1"
      input: "strided_slice_24/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_25/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6
          }
        }
      }
    }
    node {
      name: "strided_slice_25/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7
          }
        }
      }
    }
    node {
      name: "strided_slice_25/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_25"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_25/stack"
      input: "strided_slice_25/stack_1"
      input: "strided_slice_25/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_12/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Pack"
      input: "strided_slice_24"
      input: "strided_slice_25"
      input: "Reshape_12/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "split:6"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_7"
      op: "Cast"
      input: "Reshape_12"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_6"
      op: "Shape"
      input: "Cast_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_26/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_26/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_26/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_26"
      op: "StridedSlice"
      input: "Shape_6"
      input: "strided_slice_26/stack"
      input: "strided_slice_26/stack_1"
      input: "strided_slice_26/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_27/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_27/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_27/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_27"
      op: "StridedSlice"
      input: "Shape_6"
      input: "strided_slice_27/stack"
      input: "strided_slice_27/stack_1"
      input: "strided_slice_27/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_12/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_12"
      op: "Sub"
      input: "sub_12/x"
      input: "strided_slice_26"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_12/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_12"
      op: "Maximum"
      input: "sub_12"
      input: "Maximum_12/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_12"
      op: "Add"
      input: "strided_slice_26"
      input: "Maximum_12"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_13/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_13"
      op: "Sub"
      input: "sub_13/x"
      input: "strided_slice_27"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_13/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_13"
      op: "Maximum"
      input: "sub_13"
      input: "Maximum_13/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_13"
      op: "Add"
      input: "strided_slice_27"
      input: "Maximum_13"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_13/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "Reshape_13/tensor"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_6/Rank"
      input: "pad_to_bounding_box_6/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_6/Rank_1"
      input: "pad_to_bounding_box_6/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_6/Equal"
      input: "pad_to_bounding_box_6/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_6/LogicalOr"
      input: "pad_to_bounding_box_6/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub"
      op: "Sub"
      input: "Cast_7"
      input: "Reshape_13"
      input: "^pad_to_bounding_box_6/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_6/sub"
      input: "pad_to_bounding_box_6/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_6/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_6/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual"
      op: "GreaterEqual"
      input: "add_13"
      input: "pad_to_bounding_box_6/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_6/GreaterEqual"
      input: "pad_to_bounding_box_6/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_12"
      input: "pad_to_bounding_box_6/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_6/GreaterEqual_1"
      input: "pad_to_bounding_box_6/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_6/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_1"
      op: "Sub"
      input: "add_13"
      input: "pad_to_bounding_box_6/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_6/sub_1"
      input: "pad_to_bounding_box_6/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_6/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_3"
      op: "Sub"
      input: "add_12"
      input: "pad_to_bounding_box_6/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_6/sub_3"
      input: "pad_to_bounding_box_6/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_6/sub_2"
      input: "pad_to_bounding_box_6/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_6/sub_4"
      input: "pad_to_bounding_box_6/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_6/GreaterEqual_2"
      input: "pad_to_bounding_box_6/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_6/LogicalAnd"
      input: "pad_to_bounding_box_6/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_6/stack_1/0"
      input: "pad_to_bounding_box_6/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_6/stack_2/0"
      input: "pad_to_bounding_box_6/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_6/stack"
      input: "pad_to_bounding_box_6/stack_1"
      input: "pad_to_bounding_box_6/stack_2"
      input: "pad_to_bounding_box_6/stack_3"
      input: "^pad_to_bounding_box_6/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_6/ExpandDims"
      input: "pad_to_bounding_box_6/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_6/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_6/add"
      op: "Add"
      input: "pad_to_bounding_box_6/Squeeze"
      input: "Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_28/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7
          }
        }
      }
    }
    node {
      name: "strided_slice_28/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "strided_slice_28/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_28"
      op: "StridedSlice"
      input: "height"
      input: "strided_slice_28/stack"
      input: "strided_slice_28/stack_1"
      input: "strided_slice_28/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_29/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7
          }
        }
      }
    }
    node {
      name: "strided_slice_29/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "strided_slice_29/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_29"
      op: "StridedSlice"
      input: "width"
      input: "strided_slice_29/stack"
      input: "strided_slice_29/stack_1"
      input: "strided_slice_29/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Reshape_14/shape/2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Pack"
      input: "strided_slice_28"
      input: "strided_slice_29"
      input: "Reshape_14/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "split:7"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_8"
      op: "Cast"
      input: "Reshape_14"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_7"
      op: "Shape"
      input: "Cast_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "strided_slice_30/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_30/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_30/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_30"
      op: "StridedSlice"
      input: "Shape_7"
      input: "strided_slice_30/stack"
      input: "strided_slice_30/stack_1"
      input: "strided_slice_30/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "strided_slice_31/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_31/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "strided_slice_31/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_31"
      op: "StridedSlice"
      input: "Shape_7"
      input: "strided_slice_31/stack"
      input: "strided_slice_31/stack_1"
      input: "strided_slice_31/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "sub_14/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_14"
      op: "Sub"
      input: "sub_14/x"
      input: "strided_slice_30"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_14/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_14"
      op: "Maximum"
      input: "sub_14"
      input: "Maximum_14/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_14"
      op: "Add"
      input: "strided_slice_30"
      input: "Maximum_14"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "sub_15/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 513
          }
        }
      }
    }
    node {
      name: "sub_15"
      op: "Sub"
      input: "sub_15/x"
      input: "strided_slice_31"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Maximum_15/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Maximum_15"
      op: "Maximum"
      input: "sub_15"
      input: "Maximum_15/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "add_15"
      op: "Add"
      input: "strided_slice_31"
      input: "Maximum_15"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Reshape_15/tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\000\000\377B\000\000\377B\000\000\377B"
          }
        }
      }
    }
    node {
      name: "Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "Reshape_15"
      op: "Reshape"
      input: "Reshape_15/tensor"
      input: "Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Equal"
      op: "Equal"
      input: "pad_to_bounding_box_7/Rank"
      input: "pad_to_bounding_box_7/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Equal_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Equal_1"
      op: "Equal"
      input: "pad_to_bounding_box_7/Rank_1"
      input: "pad_to_bounding_box_7/Equal_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/LogicalOr"
      op: "LogicalOr"
      input: "pad_to_bounding_box_7/Equal"
      input: "pad_to_bounding_box_7/Equal_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Wrong image tensor rank."
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_7/LogicalOr"
      input: "pad_to_bounding_box_7/Assert/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub"
      op: "Sub"
      input: "Cast_8"
      input: "Reshape_15"
      input: "^pad_to_bounding_box_7/Assert/Assert"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/ExpandDims"
      op: "ExpandDims"
      input: "pad_to_bounding_box_7/sub"
      input: "pad_to_bounding_box_7/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Shape"
      op: "Shape"
      input: "pad_to_bounding_box_7/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/unstack"
      op: "Unpack"
      input: "pad_to_bounding_box_7/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
      attr {
        key: "num"
        value {
          i: 4
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual"
      op: "GreaterEqual"
      input: "add_15"
      input: "pad_to_bounding_box_7/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_1/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_width must be >= width"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_1/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_7/GreaterEqual"
      input: "pad_to_bounding_box_7/Assert_1/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual_1"
      op: "GreaterEqual"
      input: "add_14"
      input: "pad_to_bounding_box_7/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_2/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target_height must be >= height"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_2/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_7/GreaterEqual_1"
      input: "pad_to_bounding_box_7/Assert_2/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_1/y"
      op: "Const"
      input: "^pad_to_bounding_box_7/Assert_1/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_1"
      op: "Sub"
      input: "add_15"
      input: "pad_to_bounding_box_7/sub_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_2"
      op: "Sub"
      input: "pad_to_bounding_box_7/sub_1"
      input: "pad_to_bounding_box_7/unstack:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_3/y"
      op: "Const"
      input: "^pad_to_bounding_box_7/Assert_2/Assert"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_3"
      op: "Sub"
      input: "add_14"
      input: "pad_to_bounding_box_7/sub_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/sub_4"
      op: "Sub"
      input: "pad_to_bounding_box_7/sub_3"
      input: "pad_to_bounding_box_7/unstack:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual_2"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_7/sub_2"
      input: "pad_to_bounding_box_7/GreaterEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/GreaterEqual_3"
      op: "GreaterEqual"
      input: "pad_to_bounding_box_7/sub_4"
      input: "pad_to_bounding_box_7/GreaterEqual_3/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/LogicalAnd"
      op: "LogicalAnd"
      input: "pad_to_bounding_box_7/GreaterEqual_2"
      input: "pad_to_bounding_box_7/GreaterEqual_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_3/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_3/Assert/data_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "target size not possible with the given target offsets"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Assert_3/Assert"
      op: "Assert"
      input: "pad_to_bounding_box_7/LogicalAnd"
      input: "pad_to_bounding_box_7/Assert_3/Assert/data_0"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_1/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_1"
      op: "Pack"
      input: "pad_to_bounding_box_7/stack_1/0"
      input: "pad_to_bounding_box_7/sub_4"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_2/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_2"
      op: "Pack"
      input: "pad_to_bounding_box_7/stack_2/0"
      input: "pad_to_bounding_box_7/sub_2"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/stack_4"
      op: "Pack"
      input: "pad_to_bounding_box_7/stack"
      input: "pad_to_bounding_box_7/stack_1"
      input: "pad_to_bounding_box_7/stack_2"
      input: "pad_to_bounding_box_7/stack_3"
      input: "^pad_to_bounding_box_7/Assert_3/Assert"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Pad"
      op: "Pad"
      input: "pad_to_bounding_box_7/ExpandDims"
      input: "pad_to_bounding_box_7/stack_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/Squeeze"
      op: "Squeeze"
      input: "pad_to_bounding_box_7/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "pad_to_bounding_box_7/add"
      op: "Add"
      input: "pad_to_bounding_box_7/Squeeze"
      input: "Reshape_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "stack"
      op: "Pack"
      input: "pad_to_bounding_box/add"
      input: "pad_to_bounding_box_1/add"
      input: "pad_to_bounding_box_2/add"
      input: "pad_to_bounding_box_3/add"
      input: "pad_to_bounding_box_4/add"
      input: "pad_to_bounding_box_5/add"
      input: "pad_to_bounding_box_6/add"
      input: "pad_to_bounding_box_7/add"
      attr {
        key: "N"
        value {
          i: 8
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.007843137718737125
          }
        }
      }
    }
    node {
      name: "mul_2"
      op: "Mul"
      input: "mul_2/x"
      input: "stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "sub_16/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "sub_16"
      op: "Sub"
      input: "mul_2"
      input: "sub_16/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/MobilenetV2/input"
      op: "Identity"
      input: "sub_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/weights"
      input: "MobilenetV2/Conv/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/weights/read"
      op: "Identity"
      input: "MobilenetV2/Conv/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/Conv/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/MobilenetV2/input"
      input: "MobilenetV2/Conv/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      input: "MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      input: "MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/Conv/Conv2D"
      input: "MobilenetV2/Conv/BatchNorm/gamma/read"
      input: "MobilenetV2/Conv/BatchNorm/beta/read"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean/read"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/Conv/Relu6"
      op: "Relu6"
      input: "MobilenetV2/Conv/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/input"
      op: "Identity"
      input: "MobilenetV2/Conv/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv/input"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\020\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
            dim {
              size: 16
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/weights"
      input: "MobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv/depthwise_output"
      input: "MobilenetV2/expanded_conv/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 16
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 16
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 16
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 16
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 16
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 16
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 16
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 16
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv/project/Conv2D"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 16
              }
            }
            shape {
              dim {
                size: 16
              }
            }
            shape {
              dim {
                size: 16
              }
            }
            shape {
              dim {
                size: 16
              }
            }
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 16
            }
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      input: "MobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_1/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_1/input"
      input: "MobilenetV2/expanded_conv_1/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_1/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 257
              }
              dim {
                size: 257
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 96
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_1/expansion_output"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 96
            }
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      input: "MobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_1/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_1/depthwise_output"
      input: "MobilenetV2/expanded_conv_1/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_1/project/Conv2D"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_1/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_1/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 24
            }
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      input: "MobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_2/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_2/input"
      input: "MobilenetV2/expanded_conv_2/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_2/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 144
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_2/expansion_output"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 144
            }
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      input: "MobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_2/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_2/depthwise_output"
      input: "MobilenetV2/expanded_conv_2/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 24
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 24
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_2/project/Conv2D"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_2/project/Identity"
      input: "MobilenetV2/expanded_conv_2/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_2/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_2/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 24
            }
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      input: "MobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_3/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_3/input"
      input: "MobilenetV2/expanded_conv_3/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_3/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 129
              }
              dim {
                size: 129
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 144
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_3/expansion_output"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 144
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 144
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 144
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      input: "MobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_3/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_3/depthwise_output"
      input: "MobilenetV2/expanded_conv_3/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_3/project/Conv2D"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_3/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_3/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      input: "MobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_4/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_4/input"
      input: "MobilenetV2/expanded_conv_4/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_4/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 192
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_4/expansion_output"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 192
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      input: "MobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_4/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_4/depthwise_output"
      input: "MobilenetV2/expanded_conv_4/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_4/project/Conv2D"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_4/project/Identity"
      input: "MobilenetV2/expanded_conv_4/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_4/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_4/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      input: "MobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_5/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_5/input"
      input: "MobilenetV2/expanded_conv_5/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_5/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 192
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_5/expansion_output"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 192
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      input: "MobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_5/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_5/depthwise_output"
      input: "MobilenetV2/expanded_conv_5/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_5/project/Conv2D"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_5/project/Identity"
      input: "MobilenetV2/expanded_conv_5/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_5/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_5/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      input: "MobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_6/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_6/input"
      input: "MobilenetV2/expanded_conv_6/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_6/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 192
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_6/expansion_output"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 192
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 192
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 192
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      input: "MobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_6/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_6/depthwise_output"
      input: "MobilenetV2/expanded_conv_6/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_6/project/Conv2D"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_6/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_6/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 64
            }
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      input: "MobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_7/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_7/input"
      input: "MobilenetV2/expanded_conv_7/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_7/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 384
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_7/expansion_output"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 384
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      input: "MobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_7/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_7/depthwise_output"
      input: "MobilenetV2/expanded_conv_7/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_7/project/Conv2D"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_7/project/Identity"
      input: "MobilenetV2/expanded_conv_7/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_7/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_7/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 64
            }
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      input: "MobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_8/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_8/input"
      input: "MobilenetV2/expanded_conv_8/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_8/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 384
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_8/expansion_output"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 384
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      input: "MobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_8/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_8/depthwise_output"
      input: "MobilenetV2/expanded_conv_8/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_8/project/Conv2D"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_8/project/Identity"
      input: "MobilenetV2/expanded_conv_8/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_8/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_8/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 64
            }
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      input: "MobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_9/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_9/input"
      input: "MobilenetV2/expanded_conv_9/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_9/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 384
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_9/expansion_output"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 384
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      input: "MobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_9/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_9/depthwise_output"
      input: "MobilenetV2/expanded_conv_9/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_9/project/Conv2D"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_9/project/Identity"
      input: "MobilenetV2/expanded_conv_9/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_9/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_9/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 64
            }
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      input: "MobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_10/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_10/input"
      input: "MobilenetV2/expanded_conv_10/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_10/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 384
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_10/expansion_output"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 384
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 384
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 384
            }
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      input: "MobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_10/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_10/depthwise_output"
      input: "MobilenetV2/expanded_conv_10/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_10/project/Conv2D"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_10/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_10/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 96
            }
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      input: "MobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_11/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_11/input"
      input: "MobilenetV2/expanded_conv_11/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_11/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 576
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_11/expansion_output"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 576
            }
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      input: "MobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_11/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_11/depthwise_output"
      input: "MobilenetV2/expanded_conv_11/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_11/project/Conv2D"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_11/project/Identity"
      input: "MobilenetV2/expanded_conv_11/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_11/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_11/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 96
            }
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      input: "MobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_12/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_12/input"
      input: "MobilenetV2/expanded_conv_12/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_12/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 576
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_12/expansion_output"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 576
            }
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      input: "MobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_12/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_12/depthwise_output"
      input: "MobilenetV2/expanded_conv_12/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 96
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 96
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_12/project/Conv2D"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_12/project/Identity"
      input: "MobilenetV2/expanded_conv_12/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_12/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_12/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 96
            }
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      input: "MobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_13/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_13/input"
      input: "MobilenetV2/expanded_conv_13/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_13/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 576
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_13/expansion_output"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 35
              }
              dim {
                size: 35
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 33
              }
              dim {
                size: 33
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\002\000\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 576
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 576
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 576
            }
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      input: "MobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_13/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_13/depthwise_output"
      input: "MobilenetV2/expanded_conv_13/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_13/project/Conv2D"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_13/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_13/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 160
            }
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      input: "MobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_14/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_14/input"
      input: "MobilenetV2/expanded_conv_14/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_14/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 960
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_14/expansion_output"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 17
              }
              dim {
                size: 17
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 960
            }
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      input: "MobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_14/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_14/depthwise_output"
      input: "MobilenetV2/expanded_conv_14/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_14/project/Conv2D"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_14/project/Identity"
      input: "MobilenetV2/expanded_conv_14/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_14/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_14/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 160
            }
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      input: "MobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_15/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_15/input"
      input: "MobilenetV2/expanded_conv_15/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_15/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 960
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_15/expansion_output"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 17
              }
              dim {
                size: 17
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 960
            }
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      input: "MobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_15/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_15/depthwise_output"
      input: "MobilenetV2/expanded_conv_15/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 160
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 160
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_15/project/Conv2D"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/add"
      op: "Add"
      input: "MobilenetV2/expanded_conv_15/project/Identity"
      input: "MobilenetV2/expanded_conv_15/input"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_15/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/input"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_15/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 160
            }
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      input: "MobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_16/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_16/input"
      input: "MobilenetV2/expanded_conv_16/expand/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_16/expand/Conv2D"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expand/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/expansion_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/expand/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 960
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/required_space_to_batch_paddings/input_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/required_space_to_batch_paddings/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/required_space_to_batch_paddings/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND/paddings"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\007\000\000\000\004\000\000\000\007\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND"
      op: "SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_16/expansion_output"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND/block_shape"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 19
              }
              dim {
                size: 19
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise"
      op: "DepthwiseConv2dNative"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/SpaceToBatchND"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 17
              }
              dim {
                size: 17
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND/block_shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND/crops"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND"
      op: "BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND/block_shape"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND/crops"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tblock_shape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tcrops"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 960
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 960
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise/BatchToSpaceND"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise/Relu6"
      op: "Relu6"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/depthwise_output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/depthwise/Relu6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09000000357627869
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
      op: "Add"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mul"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 960
            }
            dim {
              size: 320
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      input: "MobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/weights/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "MobilenetV2/expanded_conv_16/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/scale"
      input: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_16/depthwise_output"
      input: "MobilenetV2/expanded_conv_16/project/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 320
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 320
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 320
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 320
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 320
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 320
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 320
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 320
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "MobilenetV2/expanded_conv_16/project/Conv2D"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 320
              }
            }
            shape {
              dim {
                size: 320
              }
            }
            shape {
              dim {
                size: 320
              }
            }
            shape {
              dim {
                size: 320
              }
            }
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 0.0010000000474974513
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.996999979019165
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/project/Identity"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "MobilenetV2/expanded_conv_16/output"
      op: "Identity"
      input: "MobilenetV2/expanded_conv_16/project/Identity"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
    }
    node {
      name: "AvgPool2D/AvgPool"
      op: "AvgPool"
      input: "MobilenetV2/expanded_conv_16/output"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 65
            i: 65
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.10206207633018494
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10206207633018494
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "image_pooling/weights/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/sub"
      op: "Sub"
      input: "image_pooling/weights/Initializer/random_uniform/max"
      input: "image_pooling/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform/mul"
      op: "Mul"
      input: "image_pooling/weights/Initializer/random_uniform/RandomUniform"
      input: "image_pooling/weights/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/weights/Initializer/random_uniform"
      op: "Add"
      input: "image_pooling/weights/Initializer/random_uniform/mul"
      input: "image_pooling/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 320
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "image_pooling/weights/Assign"
      op: "Assign"
      input: "image_pooling/weights"
      input: "image_pooling/weights/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/weights/read"
      op: "Identity"
      input: "image_pooling/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "image_pooling/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "image_pooling/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "image_pooling/kernel/Regularizer/l2_regularizer/scale"
      input: "image_pooling/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "image_pooling/Conv2D"
      op: "Conv2D"
      input: "AvgPool2D/AvgPool"
      input: "image_pooling/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "image_pooling/BatchNorm/gamma"
      input: "image_pooling/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/gamma/read"
      op: "Identity"
      input: "image_pooling/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/beta/Assign"
      op: "Assign"
      input: "image_pooling/BatchNorm/beta"
      input: "image_pooling/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/beta/read"
      op: "Identity"
      input: "image_pooling/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_mean"
      input: "image_pooling/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "image_pooling/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_variance"
      input: "image_pooling/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "image_pooling/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "image_pooling/Conv2D"
      input: "image_pooling/BatchNorm/gamma/read"
      input: "image_pooling/BatchNorm/beta/read"
      input: "image_pooling/BatchNorm/moving_mean/read"
      input: "image_pooling/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 1.0009999641624745e-05
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "image_pooling/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9997000098228455
          }
        }
      }
    }
    node {
      name: "image_pooling/Relu"
      op: "Relu"
      input: "image_pooling/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "ResizeBilinear/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "ResizeBilinear"
      op: "ResizeBilinear"
      input: "image_pooling/Relu"
      input: "ResizeBilinear/size"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "align_corners"
        value {
          b: true
        }
      }
      attr {
        key: "half_pixel_centers"
        value {
          b: false
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.10206207633018494
          }
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10206207633018494
          }
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "aspp0/weights/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/sub"
      op: "Sub"
      input: "aspp0/weights/Initializer/random_uniform/max"
      input: "aspp0/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform/mul"
      op: "Mul"
      input: "aspp0/weights/Initializer/random_uniform/RandomUniform"
      input: "aspp0/weights/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/weights/Initializer/random_uniform"
      op: "Add"
      input: "aspp0/weights/Initializer/random_uniform/mul"
      input: "aspp0/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 320
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "aspp0/weights/Assign"
      op: "Assign"
      input: "aspp0/weights"
      input: "aspp0/weights/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/weights/read"
      op: "Identity"
      input: "aspp0/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "aspp0/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "aspp0/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "aspp0/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "aspp0/kernel/Regularizer/l2_regularizer/scale"
      input: "aspp0/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "aspp0/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "aspp0/Conv2D"
      op: "Conv2D"
      input: "MobilenetV2/expanded_conv_16/output"
      input: "aspp0/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "aspp0/BatchNorm/gamma"
      input: "aspp0/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/gamma/read"
      op: "Identity"
      input: "aspp0/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/beta/Assign"
      op: "Assign"
      input: "aspp0/BatchNorm/beta"
      input: "aspp0/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/beta/read"
      op: "Identity"
      input: "aspp0/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_mean"
      input: "aspp0/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "aspp0/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_variance"
      input: "aspp0/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "aspp0/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "aspp0/Conv2D"
      input: "aspp0/BatchNorm/gamma/read"
      input: "aspp0/BatchNorm/beta/read"
      input: "aspp0/BatchNorm/moving_mean/read"
      input: "aspp0/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 1.0009999641624745e-05
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "aspp0/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9997000098228455
          }
        }
      }
    }
    node {
      name: "aspp0/Relu"
      op: "Relu"
      input: "aspp0/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "ResizeBilinear"
      input: "aspp0/Relu"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0883883461356163
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "concat_projection/weights/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/sub"
      op: "Sub"
      input: "concat_projection/weights/Initializer/random_uniform/max"
      input: "concat_projection/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform/mul"
      op: "Mul"
      input: "concat_projection/weights/Initializer/random_uniform/RandomUniform"
      input: "concat_projection/weights/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/weights/Initializer/random_uniform"
      op: "Add"
      input: "concat_projection/weights/Initializer/random_uniform/mul"
      input: "concat_projection/weights/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 512
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "concat_projection/weights/Assign"
      op: "Assign"
      input: "concat_projection/weights"
      input: "concat_projection/weights/Initializer/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/weights/read"
      op: "Identity"
      input: "concat_projection/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "concat_projection/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "concat_projection/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "concat_projection/kernel/Regularizer/l2_regularizer/scale"
      input: "concat_projection/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "concat_projection/Conv2D"
      op: "Conv2D"
      input: "concat"
      input: "concat_projection/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/gamma/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/gamma"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/gamma/Assign"
      op: "Assign"
      input: "concat_projection/BatchNorm/gamma"
      input: "concat_projection/BatchNorm/gamma/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/gamma/read"
      op: "Identity"
      input: "concat_projection/BatchNorm/gamma"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/beta/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/beta"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/beta/Assign"
      op: "Assign"
      input: "concat_projection/BatchNorm/beta"
      input: "concat_projection/BatchNorm/beta/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/beta/read"
      op: "Identity"
      input: "concat_projection/BatchNorm/beta"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_mean/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_mean"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_mean/Assign"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_mean"
      input: "concat_projection/BatchNorm/moving_mean/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_mean/read"
      op: "Identity"
      input: "concat_projection/BatchNorm/moving_mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_variance/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_variance"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_variance/Assign"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_variance"
      input: "concat_projection/BatchNorm/moving_variance/Initializer/ones"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/moving_variance/read"
      op: "Identity"
      input: "concat_projection/BatchNorm/moving_variance"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/FusedBatchNorm"
      op: "FusedBatchNorm"
      input: "concat_projection/Conv2D"
      input: "concat_projection/BatchNorm/gamma/read"
      input: "concat_projection/BatchNorm/beta/read"
      input: "concat_projection/BatchNorm/moving_mean/read"
      input: "concat_projection/BatchNorm/moving_variance/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "epsilon"
        value {
          f: 1.0009999641624745e-05
        }
      }
      attr {
        key: "is_training"
        value {
          b: false
        }
      }
    }
    node {
      name: "concat_projection/BatchNorm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9997000098228455
          }
        }
      }
    }
    node {
      name: "concat_projection/Relu"
      op: "Relu"
      input: "concat_projection/BatchNorm/FusedBatchNorm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "concat_projection_dropout/Identity"
      op: "Identity"
      input: "concat_projection/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\002\000\000\000"
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal/TruncatedNormal"
      op: "TruncatedNormal"
      input: "logits/semantic/weights/Initializer/truncated_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal/mul"
      op: "Mul"
      input: "logits/semantic/weights/Initializer/truncated_normal/TruncatedNormal"
      input: "logits/semantic/weights/Initializer/truncated_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights/Initializer/truncated_normal"
      op: "Add"
      input: "logits/semantic/weights/Initializer/truncated_normal/mul"
      input: "logits/semantic/weights/Initializer/truncated_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/weights"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
            dim {
              size: 256
            }
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "logits/semantic/weights/Assign"
      op: "Assign"
      input: "logits/semantic/weights"
      input: "logits/semantic/weights/Initializer/truncated_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "logits/semantic/weights/read"
      op: "Identity"
      input: "logits/semantic/weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/kernel/Regularizer/l2_regularizer/scale"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-05
          }
        }
      }
    }
    node {
      name: "logits/semantic/kernel/Regularizer/l2_regularizer/L2Loss"
      op: "L2Loss"
      input: "logits/semantic/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/kernel/Regularizer/l2_regularizer"
      op: "Mul"
      input: "logits/semantic/kernel/Regularizer/l2_regularizer/scale"
      input: "logits/semantic/kernel/Regularizer/l2_regularizer/L2Loss"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/biases/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 2
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "logits/semantic/biases"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 2
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "logits/semantic/biases/Assign"
      op: "Assign"
      input: "logits/semantic/biases"
      input: "logits/semantic/biases/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "logits/semantic/biases/read"
      op: "Identity"
      input: "logits/semantic/biases"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "logits/semantic/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "logits/semantic/Conv2D"
      op: "Conv2D"
      input: "concat_projection_dropout/Identity"
      input: "logits/semantic/weights/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "logits/semantic/BiasAdd"
      op: "BiasAdd"
      input: "logits/semantic/Conv2D"
      input: "logits/semantic/biases/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "ResizeBilinear_1/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "A\000\000\000A\000\000\000"
          }
        }
      }
    }
    node {
      name: "ResizeBilinear_1"
      op: "ResizeBilinear"
      input: "logits/semantic/BiasAdd"
      input: "ResizeBilinear_1/size"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 65
              }
              dim {
                size: 65
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "align_corners"
        value {
          b: true
        }
      }
      attr {
        key: "half_pixel_centers"
        value {
          b: false
        }
      }
    }
    node {
      name: "Shape_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\010\000\000\000\001\002\000\000\001\002\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "strided_slice_32/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_32/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "strided_slice_32/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_32"
      op: "StridedSlice"
      input: "Shape_8"
      input: "strided_slice_32/stack"
      input: "strided_slice_32/stack_1"
      input: "strided_slice_32/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "ResizeBilinear_2"
      op: "ResizeBilinear"
      input: "ResizeBilinear_1"
      input: "strided_slice_32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "align_corners"
        value {
          b: true
        }
      }
      attr {
        key: "half_pixel_centers"
        value {
          b: false
        }
      }
    }
    node {
      name: "Slice/begin"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Slice/size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\377\377\377\377\377\377\377\377\377\377\377\377\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Slice"
      op: "Slice"
      input: "ResizeBilinear_2"
      input: "Slice/begin"
      input: "Slice/size"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Mul_3/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 128.0
          }
        }
      }
    }
    node {
      name: "Mul_3"
      op: "Mul"
      input: "Slice"
      input: "Mul_3/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "clip_by_value/Minimum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 255.0
          }
        }
      }
    }
    node {
      name: "clip_by_value/Minimum"
      op: "Minimum"
      input: "Mul_3"
      input: "clip_by_value/Minimum/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "clip_by_value/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "clip_by_value"
      op: "Maximum"
      input: "clip_by_value/Minimum"
      input: "clip_by_value/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Cast_9"
      op: "Cast"
      input: "clip_by_value"
      attr {
        key: "DstT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "probmap"
      op: "Identity"
      input: "Cast_9"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 513
              }
              dim {
                size: 513
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: "MobilenetV2/Conv/BatchNorm/beta"
            string_val: "MobilenetV2/Conv/BatchNorm/gamma"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
            string_val: "MobilenetV2/Conv/weights"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/project/weights"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/expand/weights"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/project/weights"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/expand/weights"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/project/weights"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/expand/weights"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/project/weights"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/expand/weights"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/project/weights"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/expand/weights"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/project/weights"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/expand/weights"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/project/weights"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/expand/weights"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/project/weights"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/expand/weights"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/project/weights"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/expand/weights"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/project/weights"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/expand/weights"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/project/weights"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/expand/weights"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/project/weights"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/expand/weights"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/project/weights"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/expand/weights"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/project/weights"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/expand/weights"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/project/weights"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/expand/weights"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/project/weights"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/expand/weights"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/project/weights"
            string_val: "aspp0/BatchNorm/beta"
            string_val: "aspp0/BatchNorm/gamma"
            string_val: "aspp0/BatchNorm/moving_mean"
            string_val: "aspp0/BatchNorm/moving_variance"
            string_val: "aspp0/weights"
            string_val: "concat_projection/BatchNorm/beta"
            string_val: "concat_projection/BatchNorm/gamma"
            string_val: "concat_projection/BatchNorm/moving_mean"
            string_val: "concat_projection/BatchNorm/moving_variance"
            string_val: "concat_projection/weights"
            string_val: "image_pooling/BatchNorm/beta"
            string_val: "image_pooling/BatchNorm/gamma"
            string_val: "image_pooling/BatchNorm/moving_mean"
            string_val: "image_pooling/BatchNorm/moving_variance"
            string_val: "image_pooling/weights"
            string_val: "logits/semantic/biases"
            string_val: "logits/semantic/weights"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      input: "MobilenetV2/Conv/weights"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/project/weights"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      input: "aspp0/BatchNorm/beta"
      input: "aspp0/BatchNorm/gamma"
      input: "aspp0/BatchNorm/moving_mean"
      input: "aspp0/BatchNorm/moving_variance"
      input: "aspp0/weights"
      input: "concat_projection/BatchNorm/beta"
      input: "concat_projection/BatchNorm/gamma"
      input: "concat_projection/BatchNorm/moving_mean"
      input: "concat_projection/BatchNorm/moving_variance"
      input: "concat_projection/weights"
      input: "image_pooling/BatchNorm/beta"
      input: "image_pooling/BatchNorm/gamma"
      input: "image_pooling/BatchNorm/moving_mean"
      input: "image_pooling/BatchNorm/moving_variance"
      input: "image_pooling/weights"
      input: "logits/semantic/biases"
      input: "logits/semantic/weights"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: "MobilenetV2/Conv/BatchNorm/beta"
            string_val: "MobilenetV2/Conv/BatchNorm/gamma"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
            string_val: "MobilenetV2/Conv/weights"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/project/weights"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/expand/weights"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/project/weights"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/expand/weights"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/project/weights"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/expand/weights"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/project/weights"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/expand/weights"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/project/weights"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/expand/weights"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/project/weights"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/expand/weights"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/project/weights"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/expand/weights"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/project/weights"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/expand/weights"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/project/weights"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/expand/weights"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/project/weights"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/expand/weights"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/project/weights"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/expand/weights"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/project/weights"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/expand/weights"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/project/weights"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/expand/weights"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/project/weights"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/expand/weights"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/project/weights"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/expand/weights"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/project/weights"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/expand/weights"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/project/weights"
            string_val: "aspp0/BatchNorm/beta"
            string_val: "aspp0/BatchNorm/gamma"
            string_val: "aspp0/BatchNorm/moving_mean"
            string_val: "aspp0/BatchNorm/moving_variance"
            string_val: "aspp0/weights"
            string_val: "concat_projection/BatchNorm/beta"
            string_val: "concat_projection/BatchNorm/gamma"
            string_val: "concat_projection/BatchNorm/moving_mean"
            string_val: "concat_projection/BatchNorm/moving_variance"
            string_val: "concat_projection/weights"
            string_val: "image_pooling/BatchNorm/beta"
            string_val: "image_pooling/BatchNorm/gamma"
            string_val: "image_pooling/BatchNorm/moving_mean"
            string_val: "image_pooling/BatchNorm/moving_variance"
            string_val: "image_pooling/weights"
            string_val: "logits/semantic/biases"
            string_val: "logits/semantic/weights"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "MobilenetV2/Conv/weights"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/weights"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_30"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_31"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_32"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_33"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_34"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_35"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_36"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_37"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_38"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_39"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      input: "save/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_40"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      input: "save/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_41"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      input: "save/RestoreV2:41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_42"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_43"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_44"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      input: "save/RestoreV2:44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_45"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_46"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_47"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_48"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_49"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      input: "save/RestoreV2:49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_50"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      input: "save/RestoreV2:50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_51"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      input: "save/RestoreV2:51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_52"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:52"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_53"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_54"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      input: "save/RestoreV2:54"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_55"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      input: "save/RestoreV2:55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_56"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      input: "save/RestoreV2:56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_57"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_58"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:58"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_59"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      input: "save/RestoreV2:59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_60"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:60"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_61"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_62"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:62"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_63"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_64"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      input: "save/RestoreV2:64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_65"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      input: "save/RestoreV2:65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_66"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      input: "save/RestoreV2:66"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_67"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_68"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:68"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_69"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      input: "save/RestoreV2:69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_70"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      input: "save/RestoreV2:70"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_71"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      input: "save/RestoreV2:71"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_72"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:72"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_73"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_74"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      input: "save/RestoreV2:74"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_75"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:75"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_76"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:76"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_77"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:77"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_78"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:78"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_79"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      input: "save/RestoreV2:79"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_80"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      input: "save/RestoreV2:80"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_81"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      input: "save/RestoreV2:81"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_82"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:82"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_83"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_84"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      input: "save/RestoreV2:84"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_85"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      input: "save/RestoreV2:85"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_86"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      input: "save/RestoreV2:86"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_87"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:87"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_88"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:88"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_89"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      input: "save/RestoreV2:89"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_90"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:90"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_91"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:91"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_92"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:92"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_93"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:93"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_94"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      input: "save/RestoreV2:94"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_95"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      input: "save/RestoreV2:95"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_96"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      input: "save/RestoreV2:96"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_97"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:97"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_98"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:98"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_99"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      input: "save/RestoreV2:99"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_100"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      input: "save/RestoreV2:100"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_101"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      input: "save/RestoreV2:101"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_102"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:102"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_103"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:103"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_104"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      input: "save/RestoreV2:104"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_105"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:105"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_106"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:106"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_107"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:107"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_108"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:108"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_109"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      input: "save/RestoreV2:109"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_110"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      input: "save/RestoreV2:110"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_111"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      input: "save/RestoreV2:111"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_112"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:112"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_113"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:113"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_114"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      input: "save/RestoreV2:114"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_115"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      input: "save/RestoreV2:115"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_116"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      input: "save/RestoreV2:116"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_117"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:117"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_118"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:118"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_119"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      input: "save/RestoreV2:119"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_120"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:120"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_121"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:121"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_122"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:122"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_123"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:123"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_124"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      input: "save/RestoreV2:124"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_125"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      input: "save/RestoreV2:125"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_126"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      input: "save/RestoreV2:126"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_127"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:127"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_128"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:128"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_129"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      input: "save/RestoreV2:129"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_130"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      input: "save/RestoreV2:130"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_131"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      input: "save/RestoreV2:131"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_132"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:132"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_133"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:133"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_134"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      input: "save/RestoreV2:134"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_135"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:135"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_136"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:136"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_137"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:137"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_138"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:138"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_139"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      input: "save/RestoreV2:139"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_140"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      input: "save/RestoreV2:140"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_141"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      input: "save/RestoreV2:141"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_142"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:142"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_143"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:143"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_144"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      input: "save/RestoreV2:144"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_145"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      input: "save/RestoreV2:145"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_146"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      input: "save/RestoreV2:146"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_147"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:147"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_148"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:148"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_149"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      input: "save/RestoreV2:149"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_150"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:150"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_151"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:151"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_152"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:152"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_153"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:153"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_154"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      input: "save/RestoreV2:154"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_155"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      input: "save/RestoreV2:155"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_156"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      input: "save/RestoreV2:156"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_157"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:157"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_158"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:158"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_159"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      input: "save/RestoreV2:159"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_160"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      input: "save/RestoreV2:160"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_161"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      input: "save/RestoreV2:161"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_162"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:162"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_163"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:163"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_164"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      input: "save/RestoreV2:164"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_165"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:165"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_166"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:166"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_167"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:167"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_168"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:168"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_169"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      input: "save/RestoreV2:169"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_170"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      input: "save/RestoreV2:170"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_171"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      input: "save/RestoreV2:171"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_172"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:172"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_173"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:173"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_174"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      input: "save/RestoreV2:174"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_175"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      input: "save/RestoreV2:175"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_176"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      input: "save/RestoreV2:176"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_177"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:177"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_178"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:178"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_179"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      input: "save/RestoreV2:179"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_180"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:180"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_181"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:181"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_182"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:182"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_183"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:183"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_184"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      input: "save/RestoreV2:184"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_185"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      input: "save/RestoreV2:185"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_186"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      input: "save/RestoreV2:186"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_187"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:187"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_188"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:188"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_189"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      input: "save/RestoreV2:189"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_190"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      input: "save/RestoreV2:190"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_191"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      input: "save/RestoreV2:191"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_192"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:192"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_193"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:193"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_194"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      input: "save/RestoreV2:194"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_195"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:195"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_196"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:196"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_197"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:197"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_198"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:198"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_199"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      input: "save/RestoreV2:199"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_200"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      input: "save/RestoreV2:200"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_201"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      input: "save/RestoreV2:201"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_202"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:202"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_203"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:203"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_204"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      input: "save/RestoreV2:204"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_205"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      input: "save/RestoreV2:205"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_206"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      input: "save/RestoreV2:206"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_207"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:207"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_208"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:208"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_209"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      input: "save/RestoreV2:209"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_210"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:210"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_211"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:211"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_212"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:212"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_213"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:213"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_214"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      input: "save/RestoreV2:214"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_215"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      input: "save/RestoreV2:215"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_216"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      input: "save/RestoreV2:216"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_217"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:217"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_218"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:218"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_219"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      input: "save/RestoreV2:219"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_220"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      input: "save/RestoreV2:220"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_221"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      input: "save/RestoreV2:221"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_222"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:222"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_223"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:223"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_224"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      input: "save/RestoreV2:224"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_225"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:225"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_226"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:226"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_227"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:227"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_228"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:228"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_229"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      input: "save/RestoreV2:229"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_230"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      input: "save/RestoreV2:230"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_231"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      input: "save/RestoreV2:231"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_232"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:232"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_233"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:233"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_234"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      input: "save/RestoreV2:234"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_235"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      input: "save/RestoreV2:235"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_236"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      input: "save/RestoreV2:236"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_237"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:237"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_238"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:238"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_239"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      input: "save/RestoreV2:239"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_240"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      input: "save/RestoreV2:240"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_241"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      input: "save/RestoreV2:241"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_242"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      input: "save/RestoreV2:242"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_243"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      input: "save/RestoreV2:243"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_244"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      input: "save/RestoreV2:244"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_245"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      input: "save/RestoreV2:245"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_246"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      input: "save/RestoreV2:246"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_247"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      input: "save/RestoreV2:247"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_248"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      input: "save/RestoreV2:248"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_249"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      input: "save/RestoreV2:249"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_250"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      input: "save/RestoreV2:250"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_251"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      input: "save/RestoreV2:251"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_252"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      input: "save/RestoreV2:252"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_253"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      input: "save/RestoreV2:253"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_254"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      input: "save/RestoreV2:254"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_255"
      op: "Assign"
      input: "aspp0/BatchNorm/beta"
      input: "save/RestoreV2:255"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_256"
      op: "Assign"
      input: "aspp0/BatchNorm/gamma"
      input: "save/RestoreV2:256"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_257"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_mean"
      input: "save/RestoreV2:257"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_258"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_variance"
      input: "save/RestoreV2:258"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_259"
      op: "Assign"
      input: "aspp0/weights"
      input: "save/RestoreV2:259"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_260"
      op: "Assign"
      input: "concat_projection/BatchNorm/beta"
      input: "save/RestoreV2:260"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_261"
      op: "Assign"
      input: "concat_projection/BatchNorm/gamma"
      input: "save/RestoreV2:261"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_262"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_mean"
      input: "save/RestoreV2:262"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_263"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_variance"
      input: "save/RestoreV2:263"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_264"
      op: "Assign"
      input: "concat_projection/weights"
      input: "save/RestoreV2:264"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_265"
      op: "Assign"
      input: "image_pooling/BatchNorm/beta"
      input: "save/RestoreV2:265"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_266"
      op: "Assign"
      input: "image_pooling/BatchNorm/gamma"
      input: "save/RestoreV2:266"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_267"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_mean"
      input: "save/RestoreV2:267"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_268"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_variance"
      input: "save/RestoreV2:268"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_269"
      op: "Assign"
      input: "image_pooling/weights"
      input: "save/RestoreV2:269"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_270"
      op: "Assign"
      input: "logits/semantic/biases"
      input: "save/RestoreV2:270"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_271"
      op: "Assign"
      input: "logits/semantic/weights"
      input: "save/RestoreV2:271"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_100"
      input: "^save/Assign_101"
      input: "^save/Assign_102"
      input: "^save/Assign_103"
      input: "^save/Assign_104"
      input: "^save/Assign_105"
      input: "^save/Assign_106"
      input: "^save/Assign_107"
      input: "^save/Assign_108"
      input: "^save/Assign_109"
      input: "^save/Assign_11"
      input: "^save/Assign_110"
      input: "^save/Assign_111"
      input: "^save/Assign_112"
      input: "^save/Assign_113"
      input: "^save/Assign_114"
      input: "^save/Assign_115"
      input: "^save/Assign_116"
      input: "^save/Assign_117"
      input: "^save/Assign_118"
      input: "^save/Assign_119"
      input: "^save/Assign_12"
      input: "^save/Assign_120"
      input: "^save/Assign_121"
      input: "^save/Assign_122"
      input: "^save/Assign_123"
      input: "^save/Assign_124"
      input: "^save/Assign_125"
      input: "^save/Assign_126"
      input: "^save/Assign_127"
      input: "^save/Assign_128"
      input: "^save/Assign_129"
      input: "^save/Assign_13"
      input: "^save/Assign_130"
      input: "^save/Assign_131"
      input: "^save/Assign_132"
      input: "^save/Assign_133"
      input: "^save/Assign_134"
      input: "^save/Assign_135"
      input: "^save/Assign_136"
      input: "^save/Assign_137"
      input: "^save/Assign_138"
      input: "^save/Assign_139"
      input: "^save/Assign_14"
      input: "^save/Assign_140"
      input: "^save/Assign_141"
      input: "^save/Assign_142"
      input: "^save/Assign_143"
      input: "^save/Assign_144"
      input: "^save/Assign_145"
      input: "^save/Assign_146"
      input: "^save/Assign_147"
      input: "^save/Assign_148"
      input: "^save/Assign_149"
      input: "^save/Assign_15"
      input: "^save/Assign_150"
      input: "^save/Assign_151"
      input: "^save/Assign_152"
      input: "^save/Assign_153"
      input: "^save/Assign_154"
      input: "^save/Assign_155"
      input: "^save/Assign_156"
      input: "^save/Assign_157"
      input: "^save/Assign_158"
      input: "^save/Assign_159"
      input: "^save/Assign_16"
      input: "^save/Assign_160"
      input: "^save/Assign_161"
      input: "^save/Assign_162"
      input: "^save/Assign_163"
      input: "^save/Assign_164"
      input: "^save/Assign_165"
      input: "^save/Assign_166"
      input: "^save/Assign_167"
      input: "^save/Assign_168"
      input: "^save/Assign_169"
      input: "^save/Assign_17"
      input: "^save/Assign_170"
      input: "^save/Assign_171"
      input: "^save/Assign_172"
      input: "^save/Assign_173"
      input: "^save/Assign_174"
      input: "^save/Assign_175"
      input: "^save/Assign_176"
      input: "^save/Assign_177"
      input: "^save/Assign_178"
      input: "^save/Assign_179"
      input: "^save/Assign_18"
      input: "^save/Assign_180"
      input: "^save/Assign_181"
      input: "^save/Assign_182"
      input: "^save/Assign_183"
      input: "^save/Assign_184"
      input: "^save/Assign_185"
      input: "^save/Assign_186"
      input: "^save/Assign_187"
      input: "^save/Assign_188"
      input: "^save/Assign_189"
      input: "^save/Assign_19"
      input: "^save/Assign_190"
      input: "^save/Assign_191"
      input: "^save/Assign_192"
      input: "^save/Assign_193"
      input: "^save/Assign_194"
      input: "^save/Assign_195"
      input: "^save/Assign_196"
      input: "^save/Assign_197"
      input: "^save/Assign_198"
      input: "^save/Assign_199"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_200"
      input: "^save/Assign_201"
      input: "^save/Assign_202"
      input: "^save/Assign_203"
      input: "^save/Assign_204"
      input: "^save/Assign_205"
      input: "^save/Assign_206"
      input: "^save/Assign_207"
      input: "^save/Assign_208"
      input: "^save/Assign_209"
      input: "^save/Assign_21"
      input: "^save/Assign_210"
      input: "^save/Assign_211"
      input: "^save/Assign_212"
      input: "^save/Assign_213"
      input: "^save/Assign_214"
      input: "^save/Assign_215"
      input: "^save/Assign_216"
      input: "^save/Assign_217"
      input: "^save/Assign_218"
      input: "^save/Assign_219"
      input: "^save/Assign_22"
      input: "^save/Assign_220"
      input: "^save/Assign_221"
      input: "^save/Assign_222"
      input: "^save/Assign_223"
      input: "^save/Assign_224"
      input: "^save/Assign_225"
      input: "^save/Assign_226"
      input: "^save/Assign_227"
      input: "^save/Assign_228"
      input: "^save/Assign_229"
      input: "^save/Assign_23"
      input: "^save/Assign_230"
      input: "^save/Assign_231"
      input: "^save/Assign_232"
      input: "^save/Assign_233"
      input: "^save/Assign_234"
      input: "^save/Assign_235"
      input: "^save/Assign_236"
      input: "^save/Assign_237"
      input: "^save/Assign_238"
      input: "^save/Assign_239"
      input: "^save/Assign_24"
      input: "^save/Assign_240"
      input: "^save/Assign_241"
      input: "^save/Assign_242"
      input: "^save/Assign_243"
      input: "^save/Assign_244"
      input: "^save/Assign_245"
      input: "^save/Assign_246"
      input: "^save/Assign_247"
      input: "^save/Assign_248"
      input: "^save/Assign_249"
      input: "^save/Assign_25"
      input: "^save/Assign_250"
      input: "^save/Assign_251"
      input: "^save/Assign_252"
      input: "^save/Assign_253"
      input: "^save/Assign_254"
      input: "^save/Assign_255"
      input: "^save/Assign_256"
      input: "^save/Assign_257"
      input: "^save/Assign_258"
      input: "^save/Assign_259"
      input: "^save/Assign_26"
      input: "^save/Assign_260"
      input: "^save/Assign_261"
      input: "^save/Assign_262"
      input: "^save/Assign_263"
      input: "^save/Assign_264"
      input: "^save/Assign_265"
      input: "^save/Assign_266"
      input: "^save/Assign_267"
      input: "^save/Assign_268"
      input: "^save/Assign_269"
      input: "^save/Assign_27"
      input: "^save/Assign_270"
      input: "^save/Assign_271"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_30"
      input: "^save/Assign_31"
      input: "^save/Assign_32"
      input: "^save/Assign_33"
      input: "^save/Assign_34"
      input: "^save/Assign_35"
      input: "^save/Assign_36"
      input: "^save/Assign_37"
      input: "^save/Assign_38"
      input: "^save/Assign_39"
      input: "^save/Assign_4"
      input: "^save/Assign_40"
      input: "^save/Assign_41"
      input: "^save/Assign_42"
      input: "^save/Assign_43"
      input: "^save/Assign_44"
      input: "^save/Assign_45"
      input: "^save/Assign_46"
      input: "^save/Assign_47"
      input: "^save/Assign_48"
      input: "^save/Assign_49"
      input: "^save/Assign_5"
      input: "^save/Assign_50"
      input: "^save/Assign_51"
      input: "^save/Assign_52"
      input: "^save/Assign_53"
      input: "^save/Assign_54"
      input: "^save/Assign_55"
      input: "^save/Assign_56"
      input: "^save/Assign_57"
      input: "^save/Assign_58"
      input: "^save/Assign_59"
      input: "^save/Assign_6"
      input: "^save/Assign_60"
      input: "^save/Assign_61"
      input: "^save/Assign_62"
      input: "^save/Assign_63"
      input: "^save/Assign_64"
      input: "^save/Assign_65"
      input: "^save/Assign_66"
      input: "^save/Assign_67"
      input: "^save/Assign_68"
      input: "^save/Assign_69"
      input: "^save/Assign_7"
      input: "^save/Assign_70"
      input: "^save/Assign_71"
      input: "^save/Assign_72"
      input: "^save/Assign_73"
      input: "^save/Assign_74"
      input: "^save/Assign_75"
      input: "^save/Assign_76"
      input: "^save/Assign_77"
      input: "^save/Assign_78"
      input: "^save/Assign_79"
      input: "^save/Assign_8"
      input: "^save/Assign_80"
      input: "^save/Assign_81"
      input: "^save/Assign_82"
      input: "^save/Assign_83"
      input: "^save/Assign_84"
      input: "^save/Assign_85"
      input: "^save/Assign_86"
      input: "^save/Assign_87"
      input: "^save/Assign_88"
      input: "^save/Assign_89"
      input: "^save/Assign_9"
      input: "^save/Assign_90"
      input: "^save/Assign_91"
      input: "^save/Assign_92"
      input: "^save/Assign_93"
      input: "^save/Assign_94"
      input: "^save/Assign_95"
      input: "^save/Assign_96"
      input: "^save/Assign_97"
      input: "^save/Assign_98"
      input: "^save/Assign_99"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_c0a35e2eb8ed47538339178d4c251b8f/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: "MobilenetV2/Conv/BatchNorm/beta"
            string_val: "MobilenetV2/Conv/BatchNorm/gamma"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
            string_val: "MobilenetV2/Conv/weights"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/project/weights"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/expand/weights"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/project/weights"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/expand/weights"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/project/weights"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/expand/weights"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/project/weights"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/expand/weights"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/project/weights"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/expand/weights"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/project/weights"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/expand/weights"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/project/weights"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/expand/weights"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/project/weights"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/expand/weights"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/project/weights"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/expand/weights"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/project/weights"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/expand/weights"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/project/weights"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/expand/weights"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/project/weights"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/expand/weights"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/project/weights"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/expand/weights"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/project/weights"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/expand/weights"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/project/weights"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/expand/weights"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/project/weights"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/expand/weights"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/project/weights"
            string_val: "aspp0/BatchNorm/beta"
            string_val: "aspp0/BatchNorm/gamma"
            string_val: "aspp0/BatchNorm/moving_mean"
            string_val: "aspp0/BatchNorm/moving_variance"
            string_val: "aspp0/weights"
            string_val: "concat_projection/BatchNorm/beta"
            string_val: "concat_projection/BatchNorm/gamma"
            string_val: "concat_projection/BatchNorm/moving_mean"
            string_val: "concat_projection/BatchNorm/moving_variance"
            string_val: "concat_projection/weights"
            string_val: "image_pooling/BatchNorm/beta"
            string_val: "image_pooling/BatchNorm/gamma"
            string_val: "image_pooling/BatchNorm/moving_mean"
            string_val: "image_pooling/BatchNorm/moving_variance"
            string_val: "image_pooling/weights"
            string_val: "logits/semantic/biases"
            string_val: "logits/semantic/weights"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      input: "MobilenetV2/Conv/weights"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv/project/weights"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      input: "aspp0/BatchNorm/beta"
      input: "aspp0/BatchNorm/gamma"
      input: "aspp0/BatchNorm/moving_mean"
      input: "aspp0/BatchNorm/moving_variance"
      input: "aspp0/weights"
      input: "concat_projection/BatchNorm/beta"
      input: "concat_projection/BatchNorm/gamma"
      input: "concat_projection/BatchNorm/moving_mean"
      input: "concat_projection/BatchNorm/moving_variance"
      input: "concat_projection/weights"
      input: "image_pooling/BatchNorm/beta"
      input: "image_pooling/BatchNorm/gamma"
      input: "image_pooling/BatchNorm/moving_mean"
      input: "image_pooling/BatchNorm/moving_variance"
      input: "image_pooling/weights"
      input: "logits/semantic/biases"
      input: "logits/semantic/weights"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/MergeV2Checkpoints"
      input: "^save_1/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: "MobilenetV2/Conv/BatchNorm/beta"
            string_val: "MobilenetV2/Conv/BatchNorm/gamma"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_mean"
            string_val: "MobilenetV2/Conv/BatchNorm/moving_variance"
            string_val: "MobilenetV2/Conv/weights"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv/project/weights"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/expand/weights"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_1/project/weights"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/expand/weights"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_10/project/weights"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/expand/weights"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_11/project/weights"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/expand/weights"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_12/project/weights"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/expand/weights"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_13/project/weights"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/expand/weights"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_14/project/weights"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/expand/weights"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_15/project/weights"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/expand/weights"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_16/project/weights"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/expand/weights"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_2/project/weights"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/expand/weights"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_3/project/weights"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/expand/weights"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_4/project/weights"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/expand/weights"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_5/project/weights"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/expand/weights"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_6/project/weights"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/expand/weights"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_7/project/weights"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/expand/weights"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_8/project/weights"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/expand/weights"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
            string_val: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
            string_val: "MobilenetV2/expanded_conv_9/project/weights"
            string_val: "aspp0/BatchNorm/beta"
            string_val: "aspp0/BatchNorm/gamma"
            string_val: "aspp0/BatchNorm/moving_mean"
            string_val: "aspp0/BatchNorm/moving_variance"
            string_val: "aspp0/weights"
            string_val: "concat_projection/BatchNorm/beta"
            string_val: "concat_projection/BatchNorm/gamma"
            string_val: "concat_projection/BatchNorm/moving_mean"
            string_val: "concat_projection/BatchNorm/moving_variance"
            string_val: "concat_projection/weights"
            string_val: "image_pooling/BatchNorm/beta"
            string_val: "image_pooling/BatchNorm/gamma"
            string_val: "image_pooling/BatchNorm/moving_mean"
            string_val: "image_pooling/BatchNorm/moving_variance"
            string_val: "image_pooling/weights"
            string_val: "logits/semantic/biases"
            string_val: "logits/semantic/weights"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 272
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 272
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/beta"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/gamma"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "MobilenetV2/Conv/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "MobilenetV2/Conv/weights"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/Conv/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/beta"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "MobilenetV2/expanded_conv/project/weights"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 16
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 96
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/expand/weights"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 16
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_1/project/weights"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_1/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_30"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_31"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_32"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_33"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_34"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_35"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_36"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_37"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_38"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_39"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/expand/weights"
      input: "save_1/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_40"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
      input: "save_1/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_41"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_42"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_43"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_44"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_10/project/weights"
      input: "save_1/RestoreV2:44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_10/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_45"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_46"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_47"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_48"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_49"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_50"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_51"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_52"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:52"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_53"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_54"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/expand/weights"
      input: "save_1/RestoreV2:54"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_55"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
      input: "save_1/RestoreV2:55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_56"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_57"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_58"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:58"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_59"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_11/project/weights"
      input: "save_1/RestoreV2:59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_11/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_60"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:60"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_61"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_62"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:62"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_63"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_64"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_65"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_66"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:66"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_67"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_68"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:68"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_69"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/expand/weights"
      input: "save_1/RestoreV2:69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_70"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
      input: "save_1/RestoreV2:70"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_71"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:71"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_72"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:72"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_73"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_74"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_12/project/weights"
      input: "save_1/RestoreV2:74"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_12/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 96
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_75"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:75"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_76"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:76"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_77"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:77"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_78"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:78"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_79"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:79"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 576
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_80"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:80"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_81"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:81"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_82"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:82"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_83"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_84"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/expand/weights"
      input: "save_1/RestoreV2:84"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 96
              }
              dim {
                size: 576
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_85"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
      input: "save_1/RestoreV2:85"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_86"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:86"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_87"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:87"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_88"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:88"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_89"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_13/project/weights"
      input: "save_1/RestoreV2:89"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_13/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 576
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_90"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:90"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_91"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:91"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_92"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:92"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_93"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:93"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_94"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:94"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_95"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:95"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_96"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:96"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_97"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:97"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_98"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:98"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_99"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/expand/weights"
      input: "save_1/RestoreV2:99"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_100"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
      input: "save_1/RestoreV2:100"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_101"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:101"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_102"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:102"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_103"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:103"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_104"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_14/project/weights"
      input: "save_1/RestoreV2:104"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_14/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_105"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:105"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_106"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:106"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_107"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:107"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_108"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:108"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_109"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:109"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_110"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:110"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_111"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:111"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_112"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:112"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_113"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:113"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_114"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/expand/weights"
      input: "save_1/RestoreV2:114"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_115"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
      input: "save_1/RestoreV2:115"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_116"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:116"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_117"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:117"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_118"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:118"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_119"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_15/project/weights"
      input: "save_1/RestoreV2:119"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_15/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 160
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_120"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:120"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_121"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:121"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_122"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:122"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_123"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:123"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_124"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:124"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 960
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_125"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:125"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_126"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:126"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_127"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:127"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_128"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:128"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_129"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/expand/weights"
      input: "save_1/RestoreV2:129"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 160
              }
              dim {
                size: 960
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_130"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
      input: "save_1/RestoreV2:130"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_131"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:131"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_132"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:132"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_133"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:133"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_134"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_16/project/weights"
      input: "save_1/RestoreV2:134"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_16/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 960
              }
              dim {
                size: 320
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_135"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:135"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_136"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:136"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_137"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:137"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_138"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:138"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_139"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:139"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_140"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:140"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_141"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:141"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_142"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:142"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_143"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:143"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_144"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/expand/weights"
      input: "save_1/RestoreV2:144"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_145"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
      input: "save_1/RestoreV2:145"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_146"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:146"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_147"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:147"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_148"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:148"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_149"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_2/project/weights"
      input: "save_1/RestoreV2:149"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_2/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_150"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:150"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_151"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:151"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_152"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:152"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_153"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:153"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_154"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:154"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 144
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_155"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:155"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_156"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:156"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_157"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:157"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_158"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:158"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_159"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/expand/weights"
      input: "save_1/RestoreV2:159"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 24
              }
              dim {
                size: 144
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_160"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
      input: "save_1/RestoreV2:160"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_161"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:161"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_162"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:162"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_163"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:163"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_164"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_3/project/weights"
      input: "save_1/RestoreV2:164"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_3/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 144
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_165"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:165"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_166"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:166"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_167"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:167"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_168"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:168"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_169"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:169"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_170"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:170"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_171"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:171"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_172"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:172"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_173"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:173"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_174"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/expand/weights"
      input: "save_1/RestoreV2:174"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_175"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
      input: "save_1/RestoreV2:175"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_176"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:176"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_177"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:177"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_178"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:178"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_179"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_4/project/weights"
      input: "save_1/RestoreV2:179"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_4/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_180"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:180"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_181"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:181"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_182"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:182"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_183"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:183"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_184"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:184"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_185"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:185"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_186"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:186"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_187"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:187"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_188"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:188"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_189"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/expand/weights"
      input: "save_1/RestoreV2:189"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_190"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
      input: "save_1/RestoreV2:190"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_191"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:191"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_192"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:192"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_193"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:193"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_194"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_5/project/weights"
      input: "save_1/RestoreV2:194"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_5/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_195"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:195"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_196"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:196"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_197"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:197"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_198"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:198"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_199"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:199"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 192
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_200"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:200"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_201"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:201"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_202"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:202"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_203"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:203"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_204"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/expand/weights"
      input: "save_1/RestoreV2:204"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
              dim {
                size: 192
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_205"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
      input: "save_1/RestoreV2:205"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_206"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:206"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_207"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:207"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_208"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:208"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_209"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_6/project/weights"
      input: "save_1/RestoreV2:209"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_6/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 192
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_210"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:210"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_211"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:211"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_212"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:212"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_213"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:213"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_214"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:214"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_215"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:215"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_216"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:216"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_217"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:217"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_218"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:218"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_219"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/expand/weights"
      input: "save_1/RestoreV2:219"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_220"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
      input: "save_1/RestoreV2:220"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_221"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:221"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_222"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:222"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_223"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:223"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_224"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_7/project/weights"
      input: "save_1/RestoreV2:224"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_7/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_225"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:225"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_226"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:226"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_227"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:227"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_228"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:228"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_229"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:229"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_230"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:230"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_231"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:231"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_232"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:232"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_233"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:233"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_234"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/expand/weights"
      input: "save_1/RestoreV2:234"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_235"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
      input: "save_1/RestoreV2:235"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_236"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:236"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_237"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:237"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_238"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:238"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_239"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_8/project/weights"
      input: "save_1/RestoreV2:239"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_8/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_240"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
      input: "save_1/RestoreV2:240"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_241"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
      input: "save_1/RestoreV2:241"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_242"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:242"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_243"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:243"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_244"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
      input: "save_1/RestoreV2:244"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/depthwise/depthwise_weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 384
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_245"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
      input: "save_1/RestoreV2:245"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_246"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
      input: "save_1/RestoreV2:246"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_247"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:247"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_248"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:248"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_249"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/expand/weights"
      input: "save_1/RestoreV2:249"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/expand/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 64
              }
              dim {
                size: 384
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_250"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
      input: "save_1/RestoreV2:250"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_251"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
      input: "save_1/RestoreV2:251"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_252"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:252"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_253"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:253"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_254"
      op: "Assign"
      input: "MobilenetV2/expanded_conv_9/project/weights"
      input: "save_1/RestoreV2:254"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@MobilenetV2/expanded_conv_9/project/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 384
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_255"
      op: "Assign"
      input: "aspp0/BatchNorm/beta"
      input: "save_1/RestoreV2:255"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_256"
      op: "Assign"
      input: "aspp0/BatchNorm/gamma"
      input: "save_1/RestoreV2:256"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_257"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:257"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_258"
      op: "Assign"
      input: "aspp0/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:258"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_259"
      op: "Assign"
      input: "aspp0/weights"
      input: "save_1/RestoreV2:259"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@aspp0/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_260"
      op: "Assign"
      input: "concat_projection/BatchNorm/beta"
      input: "save_1/RestoreV2:260"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_261"
      op: "Assign"
      input: "concat_projection/BatchNorm/gamma"
      input: "save_1/RestoreV2:261"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_262"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:262"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_263"
      op: "Assign"
      input: "concat_projection/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:263"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_264"
      op: "Assign"
      input: "concat_projection/weights"
      input: "save_1/RestoreV2:264"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@concat_projection/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 512
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_265"
      op: "Assign"
      input: "image_pooling/BatchNorm/beta"
      input: "save_1/RestoreV2:265"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/beta"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_266"
      op: "Assign"
      input: "image_pooling/BatchNorm/gamma"
      input: "save_1/RestoreV2:266"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/gamma"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_267"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_mean"
      input: "save_1/RestoreV2:267"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_268"
      op: "Assign"
      input: "image_pooling/BatchNorm/moving_variance"
      input: "save_1/RestoreV2:268"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/BatchNorm/moving_variance"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_269"
      op: "Assign"
      input: "image_pooling/weights"
      input: "save_1/RestoreV2:269"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@image_pooling/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 320
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_270"
      op: "Assign"
      input: "logits/semantic/biases"
      input: "save_1/RestoreV2:270"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/biases"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_271"
      op: "Assign"
      input: "logits/semantic/weights"
      input: "save_1/RestoreV2:271"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@logits/semantic/weights"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 256
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_100"
      input: "^save_1/Assign_101"
      input: "^save_1/Assign_102"
      input: "^save_1/Assign_103"
      input: "^save_1/Assign_104"
      input: "^save_1/Assign_105"
      input: "^save_1/Assign_106"
      input: "^save_1/Assign_107"
      input: "^save_1/Assign_108"
      input: "^save_1/Assign_109"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_110"
      input: "^save_1/Assign_111"
      input: "^save_1/Assign_112"
      input: "^save_1/Assign_113"
      input: "^save_1/Assign_114"
      input: "^save_1/Assign_115"
      input: "^save_1/Assign_116"
      input: "^save_1/Assign_117"
      input: "^save_1/Assign_118"
      input: "^save_1/Assign_119"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_120"
      input: "^save_1/Assign_121"
      input: "^save_1/Assign_122"
      input: "^save_1/Assign_123"
      input: "^save_1/Assign_124"
      input: "^save_1/Assign_125"
      input: "^save_1/Assign_126"
      input: "^save_1/Assign_127"
      input: "^save_1/Assign_128"
      input: "^save_1/Assign_129"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_130"
      input: "^save_1/Assign_131"
      input: "^save_1/Assign_132"
      input: "^save_1/Assign_133"
      input: "^save_1/Assign_134"
      input: "^save_1/Assign_135"
      input: "^save_1/Assign_136"
      input: "^save_1/Assign_137"
      input: "^save_1/Assign_138"
      input: "^save_1/Assign_139"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_140"
      input: "^save_1/Assign_141"
      input: "^save_1/Assign_142"
      input: "^save_1/Assign_143"
      input: "^save_1/Assign_144"
      input: "^save_1/Assign_145"
      input: "^save_1/Assign_146"
      input: "^save_1/Assign_147"
      input: "^save_1/Assign_148"
      input: "^save_1/Assign_149"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_150"
      input: "^save_1/Assign_151"
      input: "^save_1/Assign_152"
      input: "^save_1/Assign_153"
      input: "^save_1/Assign_154"
      input: "^save_1/Assign_155"
      input: "^save_1/Assign_156"
      input: "^save_1/Assign_157"
      input: "^save_1/Assign_158"
      input: "^save_1/Assign_159"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_160"
      input: "^save_1/Assign_161"
      input: "^save_1/Assign_162"
      input: "^save_1/Assign_163"
      input: "^save_1/Assign_164"
      input: "^save_1/Assign_165"
      input: "^save_1/Assign_166"
      input: "^save_1/Assign_167"
      input: "^save_1/Assign_168"
      input: "^save_1/Assign_169"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_170"
      input: "^save_1/Assign_171"
      input: "^save_1/Assign_172"
      input: "^save_1/Assign_173"
      input: "^save_1/Assign_174"
      input: "^save_1/Assign_175"
      input: "^save_1/Assign_176"
      input: "^save_1/Assign_177"
      input: "^save_1/Assign_178"
      input: "^save_1/Assign_179"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_180"
      input: "^save_1/Assign_181"
      input: "^save_1/Assign_182"
      input: "^save_1/Assign_183"
      input: "^save_1/Assign_184"
      input: "^save_1/Assign_185"
      input: "^save_1/Assign_186"
      input: "^save_1/Assign_187"
      input: "^save_1/Assign_188"
      input: "^save_1/Assign_189"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_190"
      input: "^save_1/Assign_191"
      input: "^save_1/Assign_192"
      input: "^save_1/Assign_193"
      input: "^save_1/Assign_194"
      input: "^save_1/Assign_195"
      input: "^save_1/Assign_196"
      input: "^save_1/Assign_197"
      input: "^save_1/Assign_198"
      input: "^save_1/Assign_199"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_200"
      input: "^save_1/Assign_201"
      input: "^save_1/Assign_202"
      input: "^save_1/Assign_203"
      input: "^save_1/Assign_204"
      input: "^save_1/Assign_205"
      input: "^save_1/Assign_206"
      input: "^save_1/Assign_207"
      input: "^save_1/Assign_208"
      input: "^save_1/Assign_209"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_210"
      input: "^save_1/Assign_211"
      input: "^save_1/Assign_212"
      input: "^save_1/Assign_213"
      input: "^save_1/Assign_214"
      input: "^save_1/Assign_215"
      input: "^save_1/Assign_216"
      input: "^save_1/Assign_217"
      input: "^save_1/Assign_218"
      input: "^save_1/Assign_219"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_220"
      input: "^save_1/Assign_221"
      input: "^save_1/Assign_222"
      input: "^save_1/Assign_223"
      input: "^save_1/Assign_224"
      input: "^save_1/Assign_225"
      input: "^save_1/Assign_226"
      input: "^save_1/Assign_227"
      input: "^save_1/Assign_228"
      input: "^save_1/Assign_229"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_230"
      input: "^save_1/Assign_231"
      input: "^save_1/Assign_232"
      input: "^save_1/Assign_233"
      input: "^save_1/Assign_234"
      input: "^save_1/Assign_235"
      input: "^save_1/Assign_236"
      input: "^save_1/Assign_237"
      input: "^save_1/Assign_238"
      input: "^save_1/Assign_239"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_240"
      input: "^save_1/Assign_241"
      input: "^save_1/Assign_242"
      input: "^save_1/Assign_243"
      input: "^save_1/Assign_244"
      input: "^save_1/Assign_245"
      input: "^save_1/Assign_246"
      input: "^save_1/Assign_247"
      input: "^save_1/Assign_248"
      input: "^save_1/Assign_249"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_250"
      input: "^save_1/Assign_251"
      input: "^save_1/Assign_252"
      input: "^save_1/Assign_253"
      input: "^save_1/Assign_254"
      input: "^save_1/Assign_255"
      input: "^save_1/Assign_256"
      input: "^save_1/Assign_257"
      input: "^save_1/Assign_258"
      input: "^save_1/Assign_259"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_260"
      input: "^save_1/Assign_261"
      input: "^save_1/Assign_262"
      input: "^save_1/Assign_263"
      input: "^save_1/Assign_264"
      input: "^save_1/Assign_265"
      input: "^save_1/Assign_266"
      input: "^save_1/Assign_267"
      input: "^save_1/Assign_268"
      input: "^save_1/Assign_269"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_270"
      input: "^save_1/Assign_271"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_30"
      input: "^save_1/Assign_31"
      input: "^save_1/Assign_32"
      input: "^save_1/Assign_33"
      input: "^save_1/Assign_34"
      input: "^save_1/Assign_35"
      input: "^save_1/Assign_36"
      input: "^save_1/Assign_37"
      input: "^save_1/Assign_38"
      input: "^save_1/Assign_39"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_40"
      input: "^save_1/Assign_41"
      input: "^save_1/Assign_42"
      input: "^save_1/Assign_43"
      input: "^save_1/Assign_44"
      input: "^save_1/Assign_45"
      input: "^save_1/Assign_46"
      input: "^save_1/Assign_47"
      input: "^save_1/Assign_48"
      input: "^save_1/Assign_49"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_50"
      input: "^save_1/Assign_51"
      input: "^save_1/Assign_52"
      input: "^save_1/Assign_53"
      input: "^save_1/Assign_54"
      input: "^save_1/Assign_55"
      input: "^save_1/Assign_56"
      input: "^save_1/Assign_57"
      input: "^save_1/Assign_58"
      input: "^save_1/Assign_59"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_60"
      input: "^save_1/Assign_61"
      input: "^save_1/Assign_62"
      input: "^save_1/Assign_63"
      input: "^save_1/Assign_64"
      input: "^save_1/Assign_65"
      input: "^save_1/Assign_66"
      input: "^save_1/Assign_67"
      input: "^save_1/Assign_68"
      input: "^save_1/Assign_69"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_70"
      input: "^save_1/Assign_71"
      input: "^save_1/Assign_72"
      input: "^save_1/Assign_73"
      input: "^save_1/Assign_74"
      input: "^save_1/Assign_75"
      input: "^save_1/Assign_76"
      input: "^save_1/Assign_77"
      input: "^save_1/Assign_78"
      input: "^save_1/Assign_79"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_80"
      input: "^save_1/Assign_81"
      input: "^save_1/Assign_82"
      input: "^save_1/Assign_83"
      input: "^save_1/Assign_84"
      input: "^save_1/Assign_85"
      input: "^save_1/Assign_86"
      input: "^save_1/Assign_87"
      input: "^save_1/Assign_88"
      input: "^save_1/Assign_89"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_90"
      input: "^save_1/Assign_91"
      input: "^save_1/Assign_92"
      input: "^save_1/Assign_93"
      input: "^save_1/Assign_94"
      input: "^save_1/Assign_95"
      input: "^save_1/Assign_96"
      input: "^save_1/Assign_97"
      input: "^save_1/Assign_98"
      input: "^save_1/Assign_99"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 38
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "model_variables"
    value {
      bytes_list {
        value: "\n\032MobilenetV2/Conv/weights:0\022\037MobilenetV2/Conv/weights/Assign\032\037MobilenetV2/Conv/weights/read:027MobilenetV2/Conv/weights/Initializer/truncated_normal:08\001"
        value: "\n\"MobilenetV2/Conv/BatchNorm/gamma:0\022\'MobilenetV2/Conv/BatchNorm/gamma/Assign\032\'MobilenetV2/Conv/BatchNorm/gamma/read:023MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n!MobilenetV2/Conv/BatchNorm/beta:0\022&MobilenetV2/Conv/BatchNorm/beta/Assign\032&MobilenetV2/Conv/BatchNorm/beta/read:023MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n(MobilenetV2/Conv/BatchNorm/moving_mean:0\022-MobilenetV2/Conv/BatchNorm/moving_mean/Assign\032-MobilenetV2/Conv/BatchNorm/moving_mean/read:02:MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n,MobilenetV2/Conv/BatchNorm/moving_variance:0\0221MobilenetV2/Conv/BatchNorm/moving_variance/Assign\0321MobilenetV2/Conv/BatchNorm/moving_variance/read:02=MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n7MobilenetV2/expanded_conv/depthwise/depthwise_weights:0\022<MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign\032<MobilenetV2/expanded_conv/depthwise/depthwise_weights/read:02TMobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv/depthwise/BatchNorm/beta:0\0229MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n+MobilenetV2/expanded_conv/project/weights:0\0220MobilenetV2/expanded_conv/project/weights/Assign\0320MobilenetV2/expanded_conv/project/weights/read:02HMobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal:08\001"
        value: "\n3MobilenetV2/expanded_conv/project/BatchNorm/gamma:0\0228MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign\0328MobilenetV2/expanded_conv/project/BatchNorm/gamma/read:02DMobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n2MobilenetV2/expanded_conv/project/BatchNorm/beta:0\0227MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign\0327MobilenetV2/expanded_conv/project/BatchNorm/beta/read:02DMobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv/project/BatchNorm/moving_mean:0\022>MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign\032>MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read:02KMobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n=MobilenetV2/expanded_conv/project/BatchNorm/moving_variance:0\022BMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign\032BMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read:02NMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_1/expand/weights:0\0221MobilenetV2/expanded_conv_1/expand/weights/Assign\0321MobilenetV2/expanded_conv_1/expand/weights/read:02IMobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_1/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_1/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_1/project/weights:0\0222MobilenetV2/expanded_conv_1/project/weights/Assign\0322MobilenetV2/expanded_conv_1/project/weights/read:02JMobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_1/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_2/expand/weights:0\0221MobilenetV2/expanded_conv_2/expand/weights/Assign\0321MobilenetV2/expanded_conv_2/expand/weights/read:02IMobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_2/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_2/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_2/project/weights:0\0222MobilenetV2/expanded_conv_2/project/weights/Assign\0322MobilenetV2/expanded_conv_2/project/weights/read:02JMobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_2/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_3/expand/weights:0\0221MobilenetV2/expanded_conv_3/expand/weights/Assign\0321MobilenetV2/expanded_conv_3/expand/weights/read:02IMobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_3/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_3/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_3/project/weights:0\0222MobilenetV2/expanded_conv_3/project/weights/Assign\0322MobilenetV2/expanded_conv_3/project/weights/read:02JMobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_3/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_4/expand/weights:0\0221MobilenetV2/expanded_conv_4/expand/weights/Assign\0321MobilenetV2/expanded_conv_4/expand/weights/read:02IMobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_4/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_4/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_4/project/weights:0\0222MobilenetV2/expanded_conv_4/project/weights/Assign\0322MobilenetV2/expanded_conv_4/project/weights/read:02JMobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_4/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_5/expand/weights:0\0221MobilenetV2/expanded_conv_5/expand/weights/Assign\0321MobilenetV2/expanded_conv_5/expand/weights/read:02IMobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_5/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_5/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_5/project/weights:0\0222MobilenetV2/expanded_conv_5/project/weights/Assign\0322MobilenetV2/expanded_conv_5/project/weights/read:02JMobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_5/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_6/expand/weights:0\0221MobilenetV2/expanded_conv_6/expand/weights/Assign\0321MobilenetV2/expanded_conv_6/expand/weights/read:02IMobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_6/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_6/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_6/project/weights:0\0222MobilenetV2/expanded_conv_6/project/weights/Assign\0322MobilenetV2/expanded_conv_6/project/weights/read:02JMobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_6/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_7/expand/weights:0\0221MobilenetV2/expanded_conv_7/expand/weights/Assign\0321MobilenetV2/expanded_conv_7/expand/weights/read:02IMobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_7/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_7/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_7/project/weights:0\0222MobilenetV2/expanded_conv_7/project/weights/Assign\0322MobilenetV2/expanded_conv_7/project/weights/read:02JMobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_7/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_8/expand/weights:0\0221MobilenetV2/expanded_conv_8/expand/weights/Assign\0321MobilenetV2/expanded_conv_8/expand/weights/read:02IMobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_8/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_8/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_8/project/weights:0\0222MobilenetV2/expanded_conv_8/project/weights/Assign\0322MobilenetV2/expanded_conv_8/project/weights/read:02JMobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_8/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_9/expand/weights:0\0221MobilenetV2/expanded_conv_9/expand/weights/Assign\0321MobilenetV2/expanded_conv_9/expand/weights/read:02IMobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_9/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_9/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_9/project/weights:0\0222MobilenetV2/expanded_conv_9/project/weights/Assign\0322MobilenetV2/expanded_conv_9/project/weights/read:02JMobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_9/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_10/expand/weights:0\0222MobilenetV2/expanded_conv_10/expand/weights/Assign\0322MobilenetV2/expanded_conv_10/expand/weights/read:02JMobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_10/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_10/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_10/project/weights:0\0223MobilenetV2/expanded_conv_10/project/weights/Assign\0323MobilenetV2/expanded_conv_10/project/weights/read:02KMobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_10/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_11/expand/weights:0\0222MobilenetV2/expanded_conv_11/expand/weights/Assign\0322MobilenetV2/expanded_conv_11/expand/weights/read:02JMobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_11/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_11/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_11/project/weights:0\0223MobilenetV2/expanded_conv_11/project/weights/Assign\0323MobilenetV2/expanded_conv_11/project/weights/read:02KMobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_11/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_12/expand/weights:0\0222MobilenetV2/expanded_conv_12/expand/weights/Assign\0322MobilenetV2/expanded_conv_12/expand/weights/read:02JMobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_12/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_12/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_12/project/weights:0\0223MobilenetV2/expanded_conv_12/project/weights/Assign\0323MobilenetV2/expanded_conv_12/project/weights/read:02KMobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_12/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_13/expand/weights:0\0222MobilenetV2/expanded_conv_13/expand/weights/Assign\0322MobilenetV2/expanded_conv_13/expand/weights/read:02JMobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_13/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_13/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_13/project/weights:0\0223MobilenetV2/expanded_conv_13/project/weights/Assign\0323MobilenetV2/expanded_conv_13/project/weights/read:02KMobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_13/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_14/expand/weights:0\0222MobilenetV2/expanded_conv_14/expand/weights/Assign\0322MobilenetV2/expanded_conv_14/expand/weights/read:02JMobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_14/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_14/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_14/project/weights:0\0223MobilenetV2/expanded_conv_14/project/weights/Assign\0323MobilenetV2/expanded_conv_14/project/weights/read:02KMobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_14/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_15/expand/weights:0\0222MobilenetV2/expanded_conv_15/expand/weights/Assign\0322MobilenetV2/expanded_conv_15/expand/weights/read:02JMobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_15/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_15/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_15/project/weights:0\0223MobilenetV2/expanded_conv_15/project/weights/Assign\0323MobilenetV2/expanded_conv_15/project/weights/read:02KMobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_15/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_16/expand/weights:0\0222MobilenetV2/expanded_conv_16/expand/weights/Assign\0322MobilenetV2/expanded_conv_16/expand/weights/read:02JMobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_16/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_16/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_16/project/weights:0\0223MobilenetV2/expanded_conv_16/project/weights/Assign\0323MobilenetV2/expanded_conv_16/project/weights/read:02KMobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_16/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\027image_pooling/weights:0\022\034image_pooling/weights/Assign\032\034image_pooling/weights/read:022image_pooling/weights/Initializer/random_uniform:08\001"
        value: "\n\037image_pooling/BatchNorm/gamma:0\022$image_pooling/BatchNorm/gamma/Assign\032$image_pooling/BatchNorm/gamma/read:020image_pooling/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\036image_pooling/BatchNorm/beta:0\022#image_pooling/BatchNorm/beta/Assign\032#image_pooling/BatchNorm/beta/read:020image_pooling/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n%image_pooling/BatchNorm/moving_mean:0\022*image_pooling/BatchNorm/moving_mean/Assign\032*image_pooling/BatchNorm/moving_mean/read:027image_pooling/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n)image_pooling/BatchNorm/moving_variance:0\022.image_pooling/BatchNorm/moving_variance/Assign\032.image_pooling/BatchNorm/moving_variance/read:02:image_pooling/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\017aspp0/weights:0\022\024aspp0/weights/Assign\032\024aspp0/weights/read:02*aspp0/weights/Initializer/random_uniform:08\001"
        value: "\n\027aspp0/BatchNorm/gamma:0\022\034aspp0/BatchNorm/gamma/Assign\032\034aspp0/BatchNorm/gamma/read:02(aspp0/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\026aspp0/BatchNorm/beta:0\022\033aspp0/BatchNorm/beta/Assign\032\033aspp0/BatchNorm/beta/read:02(aspp0/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\035aspp0/BatchNorm/moving_mean:0\022\"aspp0/BatchNorm/moving_mean/Assign\032\"aspp0/BatchNorm/moving_mean/read:02/aspp0/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n!aspp0/BatchNorm/moving_variance:0\022&aspp0/BatchNorm/moving_variance/Assign\032&aspp0/BatchNorm/moving_variance/read:022aspp0/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\033concat_projection/weights:0\022 concat_projection/weights/Assign\032 concat_projection/weights/read:026concat_projection/weights/Initializer/random_uniform:08\001"
        value: "\n#concat_projection/BatchNorm/gamma:0\022(concat_projection/BatchNorm/gamma/Assign\032(concat_projection/BatchNorm/gamma/read:024concat_projection/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\"concat_projection/BatchNorm/beta:0\022\'concat_projection/BatchNorm/beta/Assign\032\'concat_projection/BatchNorm/beta/read:024concat_projection/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n)concat_projection/BatchNorm/moving_mean:0\022.concat_projection/BatchNorm/moving_mean/Assign\032.concat_projection/BatchNorm/moving_mean/read:02;concat_projection/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n-concat_projection/BatchNorm/moving_variance:0\0222concat_projection/BatchNorm/moving_variance/Assign\0322concat_projection/BatchNorm/moving_variance/read:02>concat_projection/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\031logits/semantic/weights:0\022\036logits/semantic/weights/Assign\032\036logits/semantic/weights/read:026logits/semantic/weights/Initializer/truncated_normal:08\001"
        value: "\n\030logits/semantic/biases:0\022\035logits/semantic/biases/Assign\032\035logits/semantic/biases/read:02*logits/semantic/biases/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "regularization_losses"
    value {
      node_list {
        value: "MobilenetV2/Conv/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_1/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_1/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_2/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_2/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_3/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_3/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_4/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_4/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_5/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_5/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_6/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_6/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_7/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_7/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_8/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_8/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_9/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_9/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_10/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_10/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_11/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_11/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_12/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_12/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_13/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_13/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_14/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_14/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_15/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_15/project/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_16/expand/kernel/Regularizer/l2_regularizer:0"
        value: "MobilenetV2/expanded_conv_16/project/kernel/Regularizer/l2_regularizer:0"
        value: "image_pooling/kernel/Regularizer/l2_regularizer:0"
        value: "aspp0/kernel/Regularizer/l2_regularizer:0"
        value: "concat_projection/kernel/Regularizer/l2_regularizer:0"
        value: "logits/semantic/kernel/Regularizer/l2_regularizer:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\032MobilenetV2/Conv/weights:0\022\037MobilenetV2/Conv/weights/Assign\032\037MobilenetV2/Conv/weights/read:027MobilenetV2/Conv/weights/Initializer/truncated_normal:08\001"
        value: "\n\"MobilenetV2/Conv/BatchNorm/gamma:0\022\'MobilenetV2/Conv/BatchNorm/gamma/Assign\032\'MobilenetV2/Conv/BatchNorm/gamma/read:023MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n!MobilenetV2/Conv/BatchNorm/beta:0\022&MobilenetV2/Conv/BatchNorm/beta/Assign\032&MobilenetV2/Conv/BatchNorm/beta/read:023MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n7MobilenetV2/expanded_conv/depthwise/depthwise_weights:0\022<MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign\032<MobilenetV2/expanded_conv/depthwise/depthwise_weights/read:02TMobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv/depthwise/BatchNorm/beta:0\0229MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n+MobilenetV2/expanded_conv/project/weights:0\0220MobilenetV2/expanded_conv/project/weights/Assign\0320MobilenetV2/expanded_conv/project/weights/read:02HMobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal:08\001"
        value: "\n3MobilenetV2/expanded_conv/project/BatchNorm/gamma:0\0228MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign\0328MobilenetV2/expanded_conv/project/BatchNorm/gamma/read:02DMobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n2MobilenetV2/expanded_conv/project/BatchNorm/beta:0\0227MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign\0327MobilenetV2/expanded_conv/project/BatchNorm/beta/read:02DMobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_1/expand/weights:0\0221MobilenetV2/expanded_conv_1/expand/weights/Assign\0321MobilenetV2/expanded_conv_1/expand/weights/read:02IMobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_1/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_1/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_1/project/weights:0\0222MobilenetV2/expanded_conv_1/project/weights/Assign\0322MobilenetV2/expanded_conv_1/project/weights/read:02JMobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_1/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_2/expand/weights:0\0221MobilenetV2/expanded_conv_2/expand/weights/Assign\0321MobilenetV2/expanded_conv_2/expand/weights/read:02IMobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_2/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_2/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_2/project/weights:0\0222MobilenetV2/expanded_conv_2/project/weights/Assign\0322MobilenetV2/expanded_conv_2/project/weights/read:02JMobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_2/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_3/expand/weights:0\0221MobilenetV2/expanded_conv_3/expand/weights/Assign\0321MobilenetV2/expanded_conv_3/expand/weights/read:02IMobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_3/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_3/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_3/project/weights:0\0222MobilenetV2/expanded_conv_3/project/weights/Assign\0322MobilenetV2/expanded_conv_3/project/weights/read:02JMobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_3/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_4/expand/weights:0\0221MobilenetV2/expanded_conv_4/expand/weights/Assign\0321MobilenetV2/expanded_conv_4/expand/weights/read:02IMobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_4/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_4/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_4/project/weights:0\0222MobilenetV2/expanded_conv_4/project/weights/Assign\0322MobilenetV2/expanded_conv_4/project/weights/read:02JMobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_4/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_5/expand/weights:0\0221MobilenetV2/expanded_conv_5/expand/weights/Assign\0321MobilenetV2/expanded_conv_5/expand/weights/read:02IMobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_5/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_5/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_5/project/weights:0\0222MobilenetV2/expanded_conv_5/project/weights/Assign\0322MobilenetV2/expanded_conv_5/project/weights/read:02JMobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_5/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_6/expand/weights:0\0221MobilenetV2/expanded_conv_6/expand/weights/Assign\0321MobilenetV2/expanded_conv_6/expand/weights/read:02IMobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_6/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_6/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_6/project/weights:0\0222MobilenetV2/expanded_conv_6/project/weights/Assign\0322MobilenetV2/expanded_conv_6/project/weights/read:02JMobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_6/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_7/expand/weights:0\0221MobilenetV2/expanded_conv_7/expand/weights/Assign\0321MobilenetV2/expanded_conv_7/expand/weights/read:02IMobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_7/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_7/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_7/project/weights:0\0222MobilenetV2/expanded_conv_7/project/weights/Assign\0322MobilenetV2/expanded_conv_7/project/weights/read:02JMobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_7/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_8/expand/weights:0\0221MobilenetV2/expanded_conv_8/expand/weights/Assign\0321MobilenetV2/expanded_conv_8/expand/weights/read:02IMobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_8/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_8/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_8/project/weights:0\0222MobilenetV2/expanded_conv_8/project/weights/Assign\0322MobilenetV2/expanded_conv_8/project/weights/read:02JMobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_8/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n,MobilenetV2/expanded_conv_9/expand/weights:0\0221MobilenetV2/expanded_conv_9/expand/weights/Assign\0321MobilenetV2/expanded_conv_9/expand/weights/read:02IMobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_9/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv_9/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_9/project/weights:0\0222MobilenetV2/expanded_conv_9/project/weights/Assign\0322MobilenetV2/expanded_conv_9/project/weights/read:02JMobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_9/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_10/expand/weights:0\0222MobilenetV2/expanded_conv_10/expand/weights/Assign\0322MobilenetV2/expanded_conv_10/expand/weights/read:02JMobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_10/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_10/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_10/project/weights:0\0223MobilenetV2/expanded_conv_10/project/weights/Assign\0323MobilenetV2/expanded_conv_10/project/weights/read:02KMobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_10/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_11/expand/weights:0\0222MobilenetV2/expanded_conv_11/expand/weights/Assign\0322MobilenetV2/expanded_conv_11/expand/weights/read:02JMobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_11/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_11/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_11/project/weights:0\0223MobilenetV2/expanded_conv_11/project/weights/Assign\0323MobilenetV2/expanded_conv_11/project/weights/read:02KMobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_11/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_12/expand/weights:0\0222MobilenetV2/expanded_conv_12/expand/weights/Assign\0322MobilenetV2/expanded_conv_12/expand/weights/read:02JMobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_12/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_12/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_12/project/weights:0\0223MobilenetV2/expanded_conv_12/project/weights/Assign\0323MobilenetV2/expanded_conv_12/project/weights/read:02KMobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_12/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_13/expand/weights:0\0222MobilenetV2/expanded_conv_13/expand/weights/Assign\0322MobilenetV2/expanded_conv_13/expand/weights/read:02JMobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_13/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_13/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_13/project/weights:0\0223MobilenetV2/expanded_conv_13/project/weights/Assign\0323MobilenetV2/expanded_conv_13/project/weights/read:02KMobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_13/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_14/expand/weights:0\0222MobilenetV2/expanded_conv_14/expand/weights/Assign\0322MobilenetV2/expanded_conv_14/expand/weights/read:02JMobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_14/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_14/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_14/project/weights:0\0223MobilenetV2/expanded_conv_14/project/weights/Assign\0323MobilenetV2/expanded_conv_14/project/weights/read:02KMobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_14/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_15/expand/weights:0\0222MobilenetV2/expanded_conv_15/expand/weights/Assign\0322MobilenetV2/expanded_conv_15/expand/weights/read:02JMobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_15/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_15/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_15/project/weights:0\0223MobilenetV2/expanded_conv_15/project/weights/Assign\0323MobilenetV2/expanded_conv_15/project/weights/read:02KMobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_15/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n-MobilenetV2/expanded_conv_16/expand/weights:0\0222MobilenetV2/expanded_conv_16/expand/weights/Assign\0322MobilenetV2/expanded_conv_16/expand/weights/read:02JMobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_16/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_16/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n.MobilenetV2/expanded_conv_16/project/weights:0\0223MobilenetV2/expanded_conv_16/project/weights/Assign\0323MobilenetV2/expanded_conv_16/project/weights/read:02KMobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_16/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\027image_pooling/weights:0\022\034image_pooling/weights/Assign\032\034image_pooling/weights/read:022image_pooling/weights/Initializer/random_uniform:08\001"
        value: "\n\037image_pooling/BatchNorm/gamma:0\022$image_pooling/BatchNorm/gamma/Assign\032$image_pooling/BatchNorm/gamma/read:020image_pooling/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\036image_pooling/BatchNorm/beta:0\022#image_pooling/BatchNorm/beta/Assign\032#image_pooling/BatchNorm/beta/read:020image_pooling/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\017aspp0/weights:0\022\024aspp0/weights/Assign\032\024aspp0/weights/read:02*aspp0/weights/Initializer/random_uniform:08\001"
        value: "\n\027aspp0/BatchNorm/gamma:0\022\034aspp0/BatchNorm/gamma/Assign\032\034aspp0/BatchNorm/gamma/read:02(aspp0/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\026aspp0/BatchNorm/beta:0\022\033aspp0/BatchNorm/beta/Assign\032\033aspp0/BatchNorm/beta/read:02(aspp0/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\033concat_projection/weights:0\022 concat_projection/weights/Assign\032 concat_projection/weights/read:026concat_projection/weights/Initializer/random_uniform:08\001"
        value: "\n#concat_projection/BatchNorm/gamma:0\022(concat_projection/BatchNorm/gamma/Assign\032(concat_projection/BatchNorm/gamma/read:024concat_projection/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\"concat_projection/BatchNorm/beta:0\022\'concat_projection/BatchNorm/beta/Assign\032\'concat_projection/BatchNorm/beta/read:024concat_projection/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\031logits/semantic/weights:0\022\036logits/semantic/weights/Assign\032\036logits/semantic/weights/read:026logits/semantic/weights/Initializer/truncated_normal:08\001"
        value: "\n\030logits/semantic/biases:0\022\035logits/semantic/biases/Assign\032\035logits/semantic/biases/read:02*logits/semantic/biases/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\032MobilenetV2/Conv/weights:0\022\037MobilenetV2/Conv/weights/Assign\032\037MobilenetV2/Conv/weights/read:027MobilenetV2/Conv/weights/Initializer/truncated_normal:08\001"
        value: "\n\"MobilenetV2/Conv/BatchNorm/gamma:0\022\'MobilenetV2/Conv/BatchNorm/gamma/Assign\032\'MobilenetV2/Conv/BatchNorm/gamma/read:023MobilenetV2/Conv/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n!MobilenetV2/Conv/BatchNorm/beta:0\022&MobilenetV2/Conv/BatchNorm/beta/Assign\032&MobilenetV2/Conv/BatchNorm/beta/read:023MobilenetV2/Conv/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n(MobilenetV2/Conv/BatchNorm/moving_mean:0\022-MobilenetV2/Conv/BatchNorm/moving_mean/Assign\032-MobilenetV2/Conv/BatchNorm/moving_mean/read:02:MobilenetV2/Conv/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n,MobilenetV2/Conv/BatchNorm/moving_variance:0\0221MobilenetV2/Conv/BatchNorm/moving_variance/Assign\0321MobilenetV2/Conv/BatchNorm/moving_variance/read:02=MobilenetV2/Conv/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n7MobilenetV2/expanded_conv/depthwise/depthwise_weights:0\022<MobilenetV2/expanded_conv/depthwise/depthwise_weights/Assign\032<MobilenetV2/expanded_conv/depthwise/depthwise_weights/read:02TMobilenetV2/expanded_conv/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv/depthwise/BatchNorm/beta:0\0229MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv/depthwise/BatchNorm/beta/read:02FMobilenetV2/expanded_conv/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n+MobilenetV2/expanded_conv/project/weights:0\0220MobilenetV2/expanded_conv/project/weights/Assign\0320MobilenetV2/expanded_conv/project/weights/read:02HMobilenetV2/expanded_conv/project/weights/Initializer/truncated_normal:08\001"
        value: "\n3MobilenetV2/expanded_conv/project/BatchNorm/gamma:0\0228MobilenetV2/expanded_conv/project/BatchNorm/gamma/Assign\0328MobilenetV2/expanded_conv/project/BatchNorm/gamma/read:02DMobilenetV2/expanded_conv/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n2MobilenetV2/expanded_conv/project/BatchNorm/beta:0\0227MobilenetV2/expanded_conv/project/BatchNorm/beta/Assign\0327MobilenetV2/expanded_conv/project/BatchNorm/beta/read:02DMobilenetV2/expanded_conv/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n9MobilenetV2/expanded_conv/project/BatchNorm/moving_mean:0\022>MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Assign\032>MobilenetV2/expanded_conv/project/BatchNorm/moving_mean/read:02KMobilenetV2/expanded_conv/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n=MobilenetV2/expanded_conv/project/BatchNorm/moving_variance:0\022BMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Assign\032BMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/read:02NMobilenetV2/expanded_conv/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_1/expand/weights:0\0221MobilenetV2/expanded_conv_1/expand/weights/Assign\0321MobilenetV2/expanded_conv_1/expand/weights/read:02IMobilenetV2/expanded_conv_1/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_1/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_1/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_1/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_1/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_1/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_1/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_1/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_1/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_1/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_1/project/weights:0\0222MobilenetV2/expanded_conv_1/project/weights/Assign\0322MobilenetV2/expanded_conv_1/project/weights/read:02JMobilenetV2/expanded_conv_1/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_1/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_1/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_1/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_1/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_1/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_1/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_1/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_1/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_2/expand/weights:0\0221MobilenetV2/expanded_conv_2/expand/weights/Assign\0321MobilenetV2/expanded_conv_2/expand/weights/read:02IMobilenetV2/expanded_conv_2/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_2/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_2/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_2/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_2/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_2/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_2/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_2/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_2/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_2/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_2/project/weights:0\0222MobilenetV2/expanded_conv_2/project/weights/Assign\0322MobilenetV2/expanded_conv_2/project/weights/read:02JMobilenetV2/expanded_conv_2/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_2/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_2/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_2/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_2/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_2/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_2/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_2/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_2/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_3/expand/weights:0\0221MobilenetV2/expanded_conv_3/expand/weights/Assign\0321MobilenetV2/expanded_conv_3/expand/weights/read:02IMobilenetV2/expanded_conv_3/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_3/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_3/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_3/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_3/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_3/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_3/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_3/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_3/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_3/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_3/project/weights:0\0222MobilenetV2/expanded_conv_3/project/weights/Assign\0322MobilenetV2/expanded_conv_3/project/weights/read:02JMobilenetV2/expanded_conv_3/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_3/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_3/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_3/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_3/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_3/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_3/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_3/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_3/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_4/expand/weights:0\0221MobilenetV2/expanded_conv_4/expand/weights/Assign\0321MobilenetV2/expanded_conv_4/expand/weights/read:02IMobilenetV2/expanded_conv_4/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_4/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_4/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_4/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_4/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_4/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_4/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_4/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_4/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_4/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_4/project/weights:0\0222MobilenetV2/expanded_conv_4/project/weights/Assign\0322MobilenetV2/expanded_conv_4/project/weights/read:02JMobilenetV2/expanded_conv_4/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_4/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_4/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_4/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_4/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_4/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_4/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_4/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_4/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_5/expand/weights:0\0221MobilenetV2/expanded_conv_5/expand/weights/Assign\0321MobilenetV2/expanded_conv_5/expand/weights/read:02IMobilenetV2/expanded_conv_5/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_5/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_5/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_5/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_5/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_5/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_5/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_5/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_5/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_5/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_5/project/weights:0\0222MobilenetV2/expanded_conv_5/project/weights/Assign\0322MobilenetV2/expanded_conv_5/project/weights/read:02JMobilenetV2/expanded_conv_5/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_5/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_5/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_5/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_5/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_5/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_5/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_5/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_5/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_6/expand/weights:0\0221MobilenetV2/expanded_conv_6/expand/weights/Assign\0321MobilenetV2/expanded_conv_6/expand/weights/read:02IMobilenetV2/expanded_conv_6/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_6/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_6/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_6/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_6/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_6/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_6/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_6/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_6/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_6/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_6/project/weights:0\0222MobilenetV2/expanded_conv_6/project/weights/Assign\0322MobilenetV2/expanded_conv_6/project/weights/read:02JMobilenetV2/expanded_conv_6/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_6/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_6/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_6/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_6/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_6/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_6/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_6/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_6/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_7/expand/weights:0\0221MobilenetV2/expanded_conv_7/expand/weights/Assign\0321MobilenetV2/expanded_conv_7/expand/weights/read:02IMobilenetV2/expanded_conv_7/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_7/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_7/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_7/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_7/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_7/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_7/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_7/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_7/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_7/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_7/project/weights:0\0222MobilenetV2/expanded_conv_7/project/weights/Assign\0322MobilenetV2/expanded_conv_7/project/weights/read:02JMobilenetV2/expanded_conv_7/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_7/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_7/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_7/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_7/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_7/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_7/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_7/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_7/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_8/expand/weights:0\0221MobilenetV2/expanded_conv_8/expand/weights/Assign\0321MobilenetV2/expanded_conv_8/expand/weights/read:02IMobilenetV2/expanded_conv_8/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_8/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_8/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_8/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_8/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_8/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_8/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_8/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_8/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_8/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_8/project/weights:0\0222MobilenetV2/expanded_conv_8/project/weights/Assign\0322MobilenetV2/expanded_conv_8/project/weights/read:02JMobilenetV2/expanded_conv_8/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_8/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_8/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_8/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_8/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_8/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_8/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_8/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_8/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n,MobilenetV2/expanded_conv_9/expand/weights:0\0221MobilenetV2/expanded_conv_9/expand/weights/Assign\0321MobilenetV2/expanded_conv_9/expand/weights/read:02IMobilenetV2/expanded_conv_9/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma:0\0229MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Assign\0329MobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n3MobilenetV2/expanded_conv_9/expand/BatchNorm/beta:0\0228MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Assign\0328MobilenetV2/expanded_conv_9/expand/BatchNorm/beta/read:02EMobilenetV2/expanded_conv_9/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n:MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean:0\022?MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Assign\032?MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/read:02LMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n>MobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance:0\022CMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Assign\032CMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/read:02OMobilenetV2/expanded_conv_9/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n9MobilenetV2/expanded_conv_9/depthwise/depthwise_weights:0\022>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Assign\032>MobilenetV2/expanded_conv_9/depthwise/depthwise_weights/read:02VMobilenetV2/expanded_conv_9/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n7MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma:0\022<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Assign\032<MobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n6MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta:0\022;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Assign\032;MobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/read:02HMobilenetV2/expanded_conv_9/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n=MobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean:0\022BMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Assign\032BMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/read:02OMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nAMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance:0\022FMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Assign\032FMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/read:02RMobilenetV2/expanded_conv_9/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_9/project/weights:0\0222MobilenetV2/expanded_conv_9/project/weights/Assign\0322MobilenetV2/expanded_conv_9/project/weights/read:02JMobilenetV2/expanded_conv_9/project/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_9/project/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_9/project/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_9/project/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_9/project/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_9/project/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_9/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_9/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_9/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_10/expand/weights:0\0222MobilenetV2/expanded_conv_10/expand/weights/Assign\0322MobilenetV2/expanded_conv_10/expand/weights/read:02JMobilenetV2/expanded_conv_10/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_10/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_10/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_10/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_10/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_10/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_10/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_10/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_10/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_10/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_10/project/weights:0\0223MobilenetV2/expanded_conv_10/project/weights/Assign\0323MobilenetV2/expanded_conv_10/project/weights/read:02KMobilenetV2/expanded_conv_10/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_10/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_10/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_10/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_10/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_10/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_10/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_10/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_11/expand/weights:0\0222MobilenetV2/expanded_conv_11/expand/weights/Assign\0322MobilenetV2/expanded_conv_11/expand/weights/read:02JMobilenetV2/expanded_conv_11/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_11/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_11/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_11/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_11/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_11/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_11/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_11/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_11/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_11/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_11/project/weights:0\0223MobilenetV2/expanded_conv_11/project/weights/Assign\0323MobilenetV2/expanded_conv_11/project/weights/read:02KMobilenetV2/expanded_conv_11/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_11/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_11/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_11/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_11/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_11/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_11/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_11/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_12/expand/weights:0\0222MobilenetV2/expanded_conv_12/expand/weights/Assign\0322MobilenetV2/expanded_conv_12/expand/weights/read:02JMobilenetV2/expanded_conv_12/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_12/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_12/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_12/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_12/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_12/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_12/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_12/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_12/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_12/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_12/project/weights:0\0223MobilenetV2/expanded_conv_12/project/weights/Assign\0323MobilenetV2/expanded_conv_12/project/weights/read:02KMobilenetV2/expanded_conv_12/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_12/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_12/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_12/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_12/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_12/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_12/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_12/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_13/expand/weights:0\0222MobilenetV2/expanded_conv_13/expand/weights/Assign\0322MobilenetV2/expanded_conv_13/expand/weights/read:02JMobilenetV2/expanded_conv_13/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_13/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_13/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_13/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_13/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_13/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_13/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_13/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_13/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_13/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_13/project/weights:0\0223MobilenetV2/expanded_conv_13/project/weights/Assign\0323MobilenetV2/expanded_conv_13/project/weights/read:02KMobilenetV2/expanded_conv_13/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_13/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_13/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_13/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_13/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_13/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_13/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_13/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_14/expand/weights:0\0222MobilenetV2/expanded_conv_14/expand/weights/Assign\0322MobilenetV2/expanded_conv_14/expand/weights/read:02JMobilenetV2/expanded_conv_14/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_14/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_14/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_14/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_14/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_14/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_14/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_14/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_14/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_14/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_14/project/weights:0\0223MobilenetV2/expanded_conv_14/project/weights/Assign\0323MobilenetV2/expanded_conv_14/project/weights/read:02KMobilenetV2/expanded_conv_14/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_14/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_14/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_14/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_14/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_14/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_14/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_14/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_15/expand/weights:0\0222MobilenetV2/expanded_conv_15/expand/weights/Assign\0322MobilenetV2/expanded_conv_15/expand/weights/read:02JMobilenetV2/expanded_conv_15/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_15/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_15/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_15/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_15/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_15/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_15/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_15/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_15/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_15/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_15/project/weights:0\0223MobilenetV2/expanded_conv_15/project/weights/Assign\0323MobilenetV2/expanded_conv_15/project/weights/read:02KMobilenetV2/expanded_conv_15/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_15/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_15/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_15/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_15/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_15/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_15/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_15/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n-MobilenetV2/expanded_conv_16/expand/weights:0\0222MobilenetV2/expanded_conv_16/expand/weights/Assign\0322MobilenetV2/expanded_conv_16/expand/weights/read:02JMobilenetV2/expanded_conv_16/expand/weights/Initializer/truncated_normal:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma:0\022:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Assign\032:MobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n4MobilenetV2/expanded_conv_16/expand/BatchNorm/beta:0\0229MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Assign\0329MobilenetV2/expanded_conv_16/expand/BatchNorm/beta/read:02FMobilenetV2/expanded_conv_16/expand/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n;MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean:0\022@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Assign\032@MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/read:02MMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n?MobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance:0\022DMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Assign\032DMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/read:02PMobilenetV2/expanded_conv_16/expand/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n:MobilenetV2/expanded_conv_16/depthwise/depthwise_weights:0\022?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Assign\032?MobilenetV2/expanded_conv_16/depthwise/depthwise_weights/read:02WMobilenetV2/expanded_conv_16/depthwise/depthwise_weights/Initializer/truncated_normal:08\001"
        value: "\n8MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma:0\022=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Assign\032=MobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n7MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta:0\022<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Assign\032<MobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/read:02IMobilenetV2/expanded_conv_16/depthwise/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n>MobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean:0\022CMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Assign\032CMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/read:02PMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\nBMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance:0\022GMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Assign\032GMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/read:02SMobilenetV2/expanded_conv_16/depthwise/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n.MobilenetV2/expanded_conv_16/project/weights:0\0223MobilenetV2/expanded_conv_16/project/weights/Assign\0323MobilenetV2/expanded_conv_16/project/weights/read:02KMobilenetV2/expanded_conv_16/project/weights/Initializer/truncated_normal:08\001"
        value: "\n6MobilenetV2/expanded_conv_16/project/BatchNorm/gamma:0\022;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Assign\032;MobilenetV2/expanded_conv_16/project/BatchNorm/gamma/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n5MobilenetV2/expanded_conv_16/project/BatchNorm/beta:0\022:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/Assign\032:MobilenetV2/expanded_conv_16/project/BatchNorm/beta/read:02GMobilenetV2/expanded_conv_16/project/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n<MobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean:0\022AMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Assign\032AMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/read:02NMobilenetV2/expanded_conv_16/project/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n@MobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance:0\022EMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Assign\032EMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/read:02QMobilenetV2/expanded_conv_16/project/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\027image_pooling/weights:0\022\034image_pooling/weights/Assign\032\034image_pooling/weights/read:022image_pooling/weights/Initializer/random_uniform:08\001"
        value: "\n\037image_pooling/BatchNorm/gamma:0\022$image_pooling/BatchNorm/gamma/Assign\032$image_pooling/BatchNorm/gamma/read:020image_pooling/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\036image_pooling/BatchNorm/beta:0\022#image_pooling/BatchNorm/beta/Assign\032#image_pooling/BatchNorm/beta/read:020image_pooling/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n%image_pooling/BatchNorm/moving_mean:0\022*image_pooling/BatchNorm/moving_mean/Assign\032*image_pooling/BatchNorm/moving_mean/read:027image_pooling/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n)image_pooling/BatchNorm/moving_variance:0\022.image_pooling/BatchNorm/moving_variance/Assign\032.image_pooling/BatchNorm/moving_variance/read:02:image_pooling/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\017aspp0/weights:0\022\024aspp0/weights/Assign\032\024aspp0/weights/read:02*aspp0/weights/Initializer/random_uniform:08\001"
        value: "\n\027aspp0/BatchNorm/gamma:0\022\034aspp0/BatchNorm/gamma/Assign\032\034aspp0/BatchNorm/gamma/read:02(aspp0/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\026aspp0/BatchNorm/beta:0\022\033aspp0/BatchNorm/beta/Assign\032\033aspp0/BatchNorm/beta/read:02(aspp0/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n\035aspp0/BatchNorm/moving_mean:0\022\"aspp0/BatchNorm/moving_mean/Assign\032\"aspp0/BatchNorm/moving_mean/read:02/aspp0/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n!aspp0/BatchNorm/moving_variance:0\022&aspp0/BatchNorm/moving_variance/Assign\032&aspp0/BatchNorm/moving_variance/read:022aspp0/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\033concat_projection/weights:0\022 concat_projection/weights/Assign\032 concat_projection/weights/read:026concat_projection/weights/Initializer/random_uniform:08\001"
        value: "\n#concat_projection/BatchNorm/gamma:0\022(concat_projection/BatchNorm/gamma/Assign\032(concat_projection/BatchNorm/gamma/read:024concat_projection/BatchNorm/gamma/Initializer/ones:08\001"
        value: "\n\"concat_projection/BatchNorm/beta:0\022\'concat_projection/BatchNorm/beta/Assign\032\'concat_projection/BatchNorm/beta/read:024concat_projection/BatchNorm/beta/Initializer/zeros:08\001"
        value: "\n)concat_projection/BatchNorm/moving_mean:0\022.concat_projection/BatchNorm/moving_mean/Assign\032.concat_projection/BatchNorm/moving_mean/read:02;concat_projection/BatchNorm/moving_mean/Initializer/zeros:0@\003H\002"
        value: "\n-concat_projection/BatchNorm/moving_variance:0\0222concat_projection/BatchNorm/moving_variance/Assign\0322concat_projection/BatchNorm/moving_variance/read:02>concat_projection/BatchNorm/moving_variance/Initializer/ones:0@\003H\002"
        value: "\n\031logits/semantic/weights:0\022\036logits/semantic/weights/Assign\032\036logits/semantic/weights/read:026logits/semantic/weights/Initializer/truncated_normal:08\001"
        value: "\n\030logits/semantic/biases:0\022\035logits/semantic/biases/Assign\032\035logits/semantic/biases/read:02*logits/semantic/biases/Initializer/zeros:08\001"
      }
    }
  }
  signature_def {
    key: "predict_images"
    value {
      inputs {
        key: "height"
        value {
          name: "height:0"
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 8
            }
          }
        }
      }
      inputs {
        key: "images"
        value {
          name: "x:0"
          dtype: DT_UINT8
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      inputs {
        key: "imgnum"
        value {
          name: "imgnum:0"
          dtype: DT_INT32
          tensor_shape {
          }
        }
      }
      inputs {
        key: "width"
        value {
          name: "width:0"
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: 8
            }
          }
        }
      }
      outputs {
        key: "segmentation_map"
        value {
          name: "probmap:0"
          dtype: DT_UINT8
          tensor_shape {
            dim {
              size: 8
            }
            dim {
              size: 513
            }
            dim {
              size: 513
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
